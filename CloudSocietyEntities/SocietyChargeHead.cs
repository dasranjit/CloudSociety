//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class SocietyChargeHead
    {
        #region Primitive Properties
        [Required]
        public virtual System.Guid SocietyID
        {
            get { return _societyID; }
            set
            {
                if (_societyID != value)
                {
                    if (AcHead != null && AcHead.SocietyID != value)
                    {
                        AcHead = null;
                    }
                    if (Society != null && Society.SocietyID != value)
                    {
                        Society = null;
                    }
                    if (SocietyBillSeries != null && SocietyBillSeries.SocietyID != value)
                    {
                        SocietyBillSeries = null;
                    }
                    _societyID = value;
                }
            }
        }
        private System.Guid _societyID;
        [Required]
        public virtual System.Guid ChargeHeadID
        {
            get;
            set;
        }
    	
        [StringLength(100, ErrorMessage="Number of  characters cannot be more than 100")]
        [Required]
        public virtual string ChargeHead
        {
            get;
            set;
        }
        public virtual Nullable<bool> ChargeInterest
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid AcHeadID
        {
            get { return _acHeadID; }
            set
            {
                if (_acHeadID != value)
                {
                    if (AcHead != null && AcHead.AcHeadID != value)
                    {
                        AcHead = null;
                    }
                    _acHeadID = value;
                }
            }
        }
        private System.Guid _acHeadID;
    	
        [StringLength(1, ErrorMessage="Number of  characters cannot be more than 1")]
        public virtual string Nature
        {
            get;
            set;
        }
        public virtual Nullable<decimal> Rate
        {
            get;
            set;
        }
        [Required]
        public virtual byte Sequence
        {
            get;
            set;
        }
    	
        [StringLength(5, ErrorMessage="Number of  characters cannot be more than 5")]
        [Required]
        public virtual string BillAbbreviation
        {
            get { return _billAbbreviation; }
            set
            {
                if (_billAbbreviation != value)
                {
                    if (SocietyBillSeries != null && SocietyBillSeries.BillAbbreviation != value)
                    {
                        SocietyBillSeries = null;
                    }
                    _billAbbreviation = value;
                }
            }
        }
        private string _billAbbreviation;
        [Required]
        public virtual System.Guid CreatedByID
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime CreatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> UpdatedByID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> UpdatedOn
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual AcHead AcHead
        {
            get { return _acHead; }
            set
            {
                if (!ReferenceEquals(_acHead, value))
                {
                    var previousValue = _acHead;
                    _acHead = value;
                    FixupAcHead(previousValue);
                }
            }
        }
        private AcHead _acHead;
    
        public virtual Society Society
        {
            get { return _society; }
            set
            {
                if (!ReferenceEquals(_society, value))
                {
                    var previousValue = _society;
                    _society = value;
                    FixupSociety(previousValue);
                }
            }
        }
        private Society _society;
    
        public virtual SocietyBillSeries SocietyBillSeries
        {
            get { return _societyBillSeries; }
            set
            {
                if (!ReferenceEquals(_societyBillSeries, value))
                {
                    var previousValue = _societyBillSeries;
                    _societyBillSeries = value;
                    FixupSocietyBillSeries(previousValue);
                }
            }
        }
        private SocietyBillSeries _societyBillSeries;

        #endregion

        #region Association Fixup
    
        private void FixupAcHead(AcHead previousValue)
        {
            if (previousValue != null && previousValue.SocietyChargeHeads.Contains(this))
            {
                previousValue.SocietyChargeHeads.Remove(this);
            }
    
            if (AcHead != null)
            {
                if (!AcHead.SocietyChargeHeads.Contains(this))
                {
                    AcHead.SocietyChargeHeads.Add(this);
                }
                if (SocietyID != AcHead.SocietyID)
                {
                    SocietyID = AcHead.SocietyID;
                }
                if (AcHeadID != AcHead.AcHeadID)
                {
                    AcHeadID = AcHead.AcHeadID;
                }
            }
        }
    
        private void FixupSociety(Society previousValue)
        {
            if (previousValue != null && previousValue.SocietyChargeHeads.Contains(this))
            {
                previousValue.SocietyChargeHeads.Remove(this);
            }
    
            if (Society != null)
            {
                if (!Society.SocietyChargeHeads.Contains(this))
                {
                    Society.SocietyChargeHeads.Add(this);
                }
                if (SocietyID != Society.SocietyID)
                {
                    SocietyID = Society.SocietyID;
                }
            }
        }
    
        private void FixupSocietyBillSeries(SocietyBillSeries previousValue)
        {
            if (previousValue != null && previousValue.SocietyChargeHeads.Contains(this))
            {
                previousValue.SocietyChargeHeads.Remove(this);
            }
    
            if (SocietyBillSeries != null)
            {
                if (!SocietyBillSeries.SocietyChargeHeads.Contains(this))
                {
                    SocietyBillSeries.SocietyChargeHeads.Add(this);
                }
                if (SocietyID != SocietyBillSeries.SocietyID)
                {
                    SocietyID = SocietyBillSeries.SocietyID;
                }
                if (BillAbbreviation != SocietyBillSeries.BillAbbreviation)
                {
                    BillAbbreviation = SocietyBillSeries.BillAbbreviation;
                }
            }
        }

        #endregion

    }
}
