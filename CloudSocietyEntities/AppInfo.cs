//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class AppInfo
    {
        #region Primitive Properties
        [Required]
        public virtual byte ID
        {
            get;
            set;
        }
    	
        [StringLength(5, ErrorMessage="Number of  characters cannot be more than 5")]
        [Required]
        public virtual string Abbreviation
        {
            get;
            set;
        }
    	
        [StringLength(1, ErrorMessage="Number of  characters cannot be more than 1")]
        public virtual string Currency
        {
            get;
            set;
        }
    	
        [StringLength(100, ErrorMessage="Number of  characters cannot be more than 100")]
        public virtual string CurrencyImagePath
        {
            get;
            set;
        }
        public virtual Nullable<byte> TrialPeriod
        {
            get { return _trialPeriod; }
            set { _trialPeriod = value; }
        }
        private Nullable<byte> _trialPeriod = 30;
        public virtual Nullable<byte> TrialNoOfSocieties
        {
            get { return _trialNoOfSocieties; }
            set { _trialNoOfSocieties = value; }
        }
        private Nullable<byte> _trialNoOfSocieties = 1;
        public virtual Nullable<byte> TrialMembersPerSociety
        {
            get { return _trialMembersPerSociety; }
            set { _trialMembersPerSociety = value; }
        }
        private Nullable<byte> _trialMembersPerSociety = 5;
        public virtual Nullable<System.Guid> UOMID
        {
            get { return _uOMID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_uOMID != value)
                    {
                        if (UOM != null && UOM.UOMID != value)
                        {
                            UOM = null;
                        }
                        _uOMID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _uOMID;
        public virtual Nullable<byte> TrainingNoOfSocieties
        {
            get;
            set;
        }
        public virtual Nullable<byte> TrainingMembersPerSociety
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> SubscriptionTaxID
        {
            get { return _subscriptionTaxID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_subscriptionTaxID != value)
                    {
                        if (Tax != null && Tax.TaxID != value)
                        {
                            Tax = null;
                        }
                        _subscriptionTaxID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _subscriptionTaxID;
        public virtual Nullable<byte> SubscriptionInvoiceDueDays
        {
            get;
            set;
        }
        public virtual string SubscriberTerms
        {
            get;
            set;
        }
        public virtual string TrialTerms
        {
            get;
            set;
        }
        public virtual string BillMailBody
        {
            get;
            set;
        }
        public virtual string InvoiceMailBody
        {
            get;
            set;
        }
        public virtual string TrialMailBody
        {
            get;
            set;
        }
        public virtual string ReceiptMailBody
        {
            get;
            set;
        }
        public virtual string ReceiptReversalBody
        {
            get;
            set;
        }
        public virtual string CommunMemberMailBody
        {
            get;
            set;
        }
        public virtual string CommunOfficeBearerMailBody
        {
            get;
            set;
        }
        public virtual string CommunTenantMailBody
        {
            get;
            set;
        }
        public virtual string TempReceiptMailBody
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual UOM UOM
        {
            get { return _uOM; }
            set
            {
                if (!ReferenceEquals(_uOM, value))
                {
                    var previousValue = _uOM;
                    _uOM = value;
                    FixupUOM(previousValue);
                }
            }
        }
        private UOM _uOM;
    
        public virtual Tax Tax
        {
            get { return _tax; }
            set
            {
                if (!ReferenceEquals(_tax, value))
                {
                    var previousValue = _tax;
                    _tax = value;
                    FixupTax(previousValue);
                }
            }
        }
        private Tax _tax;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupUOM(UOM previousValue)
        {
            if (previousValue != null && previousValue.AppInfoes.Contains(this))
            {
                previousValue.AppInfoes.Remove(this);
            }
    
            if (UOM != null)
            {
                if (!UOM.AppInfoes.Contains(this))
                {
                    UOM.AppInfoes.Add(this);
                }
                if (UOMID != UOM.UOMID)
                {
                    UOMID = UOM.UOMID;
                }
            }
            else if (!_settingFK)
            {
                UOMID = null;
            }
        }
    
        private void FixupTax(Tax previousValue)
        {
            if (previousValue != null && previousValue.AppInfoes.Contains(this))
            {
                previousValue.AppInfoes.Remove(this);
            }
    
            if (Tax != null)
            {
                if (!Tax.AppInfoes.Contains(this))
                {
                    Tax.AppInfoes.Add(this);
                }
                if (SubscriptionTaxID != Tax.TaxID)
                {
                    SubscriptionTaxID = Tax.TaxID;
                }
            }
            else if (!_settingFK)
            {
                SubscriptionTaxID = null;
            }
        }

        #endregion

    }
}
