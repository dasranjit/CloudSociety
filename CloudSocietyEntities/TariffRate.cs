//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class TariffRate
    {
        #region Primitive Properties
        [Required]
        public virtual System.Guid TariffRateID
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid TariffID
        {
            get { return _tariffID; }
            set
            {
                if (_tariffID != value)
                {
                    if (Tariff != null && Tariff.TariffID != value)
                    {
                        Tariff = null;
                    }
                    _tariffID = value;
                }
            }
        }
        private System.Guid _tariffID;
        [Required]
        public virtual System.Guid ServiceTypeID
        {
            get { return _serviceTypeID; }
            set
            {
                if (_serviceTypeID != value)
                {
                    if (ServiceType != null && ServiceType.ServiceTypeID != value)
                    {
                        ServiceType = null;
                    }
                    _serviceTypeID = value;
                }
            }
        }
        private System.Guid _serviceTypeID;
        [Required]
        public virtual short Rate
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid CreatedByID
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime CreatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> UpdatedByID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> UpdatedOn
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ServiceType ServiceType
        {
            get { return _serviceType; }
            set
            {
                if (!ReferenceEquals(_serviceType, value))
                {
                    var previousValue = _serviceType;
                    _serviceType = value;
                    FixupServiceType(previousValue);
                }
            }
        }
        private ServiceType _serviceType;
    
        public virtual Tariff Tariff
        {
            get { return _tariff; }
            set
            {
                if (!ReferenceEquals(_tariff, value))
                {
                    var previousValue = _tariff;
                    _tariff = value;
                    FixupTariff(previousValue);
                }
            }
        }
        private Tariff _tariff;

        #endregion

        #region Association Fixup
    
        private void FixupServiceType(ServiceType previousValue)
        {
            if (previousValue != null && previousValue.TariffRates.Contains(this))
            {
                previousValue.TariffRates.Remove(this);
            }
    
            if (ServiceType != null)
            {
                if (!ServiceType.TariffRates.Contains(this))
                {
                    ServiceType.TariffRates.Add(this);
                }
                if (ServiceTypeID != ServiceType.ServiceTypeID)
                {
                    ServiceTypeID = ServiceType.ServiceTypeID;
                }
            }
        }
    
        private void FixupTariff(Tariff previousValue)
        {
            if (previousValue != null && previousValue.TariffRates.Contains(this))
            {
                previousValue.TariffRates.Remove(this);
            }
    
            if (Tariff != null)
            {
                if (!Tariff.TariffRates.Contains(this))
                {
                    Tariff.TariffRates.Add(this);
                }
                if (TariffID != Tariff.TariffID)
                {
                    TariffID = Tariff.TariffID;
                }
            }
        }

        #endregion

    }
}
