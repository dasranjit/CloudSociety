//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class SocietyParkingTransfer
    {
        #region Primitive Properties
        [Required]
        public virtual System.Guid SocietyParkingTransferID
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid SocietyParkingID
        {
            get { return _societyParkingID; }
            set
            {
                if (_societyParkingID != value)
                {
                    if (SocietyParking != null && SocietyParking.SocietyParkingID != value)
                    {
                        SocietyParking = null;
                    }
                    _societyParkingID = value;
                }
            }
        }
        private System.Guid _societyParkingID;
        [Required]
        public virtual System.DateTime TransferredOn
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid CreatedByID
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime CreatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> UpdatedByID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> UpdatedOn
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid SocietyMemberID
        {
            get { return _societyMemberID; }
            set
            {
                if (_societyMemberID != value)
                {
                    if (SocietyMember != null && SocietyMember.SocietyMemberID != value)
                    {
                        SocietyMember = null;
                    }
                    _societyMemberID = value;
                }
            }
        }
        private System.Guid _societyMemberID;
        public virtual Nullable<System.DateTime> EndDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual SocietyParking SocietyParking
        {
            get { return _societyParking; }
            set
            {
                if (!ReferenceEquals(_societyParking, value))
                {
                    var previousValue = _societyParking;
                    _societyParking = value;
                    FixupSocietyParking(previousValue);
                }
            }
        }
        private SocietyParking _societyParking;
    
        public virtual SocietyMember SocietyMember
        {
            get { return _societyMember; }
            set
            {
                if (!ReferenceEquals(_societyMember, value))
                {
                    var previousValue = _societyMember;
                    _societyMember = value;
                    FixupSocietyMember(previousValue);
                }
            }
        }
        private SocietyMember _societyMember;

        #endregion

        #region Association Fixup
    
        private void FixupSocietyParking(SocietyParking previousValue)
        {
            if (previousValue != null && previousValue.SocietyParkingTransfers.Contains(this))
            {
                previousValue.SocietyParkingTransfers.Remove(this);
            }
    
            if (SocietyParking != null)
            {
                if (!SocietyParking.SocietyParkingTransfers.Contains(this))
                {
                    SocietyParking.SocietyParkingTransfers.Add(this);
                }
                if (SocietyParkingID != SocietyParking.SocietyParkingID)
                {
                    SocietyParkingID = SocietyParking.SocietyParkingID;
                }
            }
        }
    
        private void FixupSocietyMember(SocietyMember previousValue)
        {
            if (previousValue != null && previousValue.SocietyParkingTransfers_1.Contains(this))
            {
                previousValue.SocietyParkingTransfers_1.Remove(this);
            }
    
            if (SocietyMember != null)
            {
                if (!SocietyMember.SocietyParkingTransfers_1.Contains(this))
                {
                    SocietyMember.SocietyParkingTransfers_1.Add(this);
                }
                if (SocietyMemberID != SocietyMember.SocietyMemberID)
                {
                    SocietyMemberID = SocietyMember.SocietyMemberID;
                }
            }
        }

        #endregion

    }
}
