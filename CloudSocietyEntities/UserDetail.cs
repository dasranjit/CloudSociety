//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class UserDetail
    {
        #region Primitive Properties
        [Required]
        public virtual System.Guid UserID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> LoginExpiryDate
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> SubscriberID
        {
            get { return _subscriberID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_subscriberID != value)
                    {
                        if (Subscriber != null && Subscriber.SubscriberID != value)
                        {
                            Subscriber = null;
                        }
                        _subscriberID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _subscriberID;
        public virtual Nullable<System.Guid> SocietyMemberID
        {
            get { return _societyMemberID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_societyMemberID != value)
                    {
                        if (SocietyMember != null && SocietyMember.SocietyMemberID != value)
                        {
                            SocietyMember = null;
                        }
                        _societyMemberID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _societyMemberID;
    	
        [StringLength(30, ErrorMessage="Number of  characters cannot be more than 30")]
        public virtual string Mobile
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Subscriber Subscriber
        {
            get { return _subscriber; }
            set
            {
                if (!ReferenceEquals(_subscriber, value))
                {
                    var previousValue = _subscriber;
                    _subscriber = value;
                    FixupSubscriber(previousValue);
                }
            }
        }
        private Subscriber _subscriber;
    
        public virtual SocietyMember SocietyMember
        {
            get { return _societyMember; }
            set
            {
                if (!ReferenceEquals(_societyMember, value))
                {
                    var previousValue = _societyMember;
                    _societyMember = value;
                    FixupSocietyMember(previousValue);
                }
            }
        }
        private SocietyMember _societyMember;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupSubscriber(Subscriber previousValue)
        {
            if (previousValue != null && previousValue.UserDetails.Contains(this))
            {
                previousValue.UserDetails.Remove(this);
            }
    
            if (Subscriber != null)
            {
                if (!Subscriber.UserDetails.Contains(this))
                {
                    Subscriber.UserDetails.Add(this);
                }
                if (SubscriberID != Subscriber.SubscriberID)
                {
                    SubscriberID = Subscriber.SubscriberID;
                }
            }
            else if (!_settingFK)
            {
                SubscriberID = null;
            }
        }
    
        private void FixupSocietyMember(SocietyMember previousValue)
        {
            if (previousValue != null && previousValue.UserDetails.Contains(this))
            {
                previousValue.UserDetails.Remove(this);
            }
    
            if (SocietyMember != null)
            {
                if (!SocietyMember.UserDetails.Contains(this))
                {
                    SocietyMember.UserDetails.Add(this);
                }
                if (SocietyMemberID != SocietyMember.SocietyMemberID)
                {
                    SocietyMemberID = SocietyMember.SocietyMemberID;
                }
            }
            else if (!_settingFK)
            {
                SocietyMemberID = null;
            }
        }

        #endregion

    }
}
