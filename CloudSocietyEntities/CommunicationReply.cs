//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class CommunicationReply
    {
        #region Primitive Properties
        [Required]
        public virtual System.Guid CommunicationReplyID
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid CommunicationID
        {
            get { return _communicationID; }
            set
            {
                if (_communicationID != value)
                {
                    if (Communication != null && Communication.CommunicationID != value)
                    {
                        Communication = null;
                    }
                    _communicationID = value;
                }
            }
        }
        private System.Guid _communicationID;
        [Required]
        public virtual System.Guid BySocietyMemberID
        {
            get { return _bySocietyMemberID; }
            set
            {
                if (_bySocietyMemberID != value)
                {
                    if (SocietyMember != null && SocietyMember.SocietyMemberID != value)
                    {
                        SocietyMember = null;
                    }
                    _bySocietyMemberID = value;
                }
            }
        }
        private System.Guid _bySocietyMemberID;
        [Required]
        public virtual string Reply
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid CreatedByID
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime CreatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> UpdatedByID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> UpdatedOn
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual SocietyMember SocietyMember
        {
            get { return _societyMember; }
            set
            {
                if (!ReferenceEquals(_societyMember, value))
                {
                    var previousValue = _societyMember;
                    _societyMember = value;
                    FixupSocietyMember(previousValue);
                }
            }
        }
        private SocietyMember _societyMember;
    
        public virtual Communication Communication
        {
            get { return _communication; }
            set
            {
                if (!ReferenceEquals(_communication, value))
                {
                    var previousValue = _communication;
                    _communication = value;
                    FixupCommunication(previousValue);
                }
            }
        }
        private Communication _communication;

        #endregion

        #region Association Fixup
    
        private void FixupSocietyMember(SocietyMember previousValue)
        {
            if (previousValue != null && previousValue.CommunicationReplies.Contains(this))
            {
                previousValue.CommunicationReplies.Remove(this);
            }
    
            if (SocietyMember != null)
            {
                if (!SocietyMember.CommunicationReplies.Contains(this))
                {
                    SocietyMember.CommunicationReplies.Add(this);
                }
                if (BySocietyMemberID != SocietyMember.SocietyMemberID)
                {
                    BySocietyMemberID = SocietyMember.SocietyMemberID;
                }
            }
        }
    
        private void FixupCommunication(Communication previousValue)
        {
            if (previousValue != null && previousValue.CommunicationReplies.Contains(this))
            {
                previousValue.CommunicationReplies.Remove(this);
            }
    
            if (Communication != null)
            {
                if (!Communication.CommunicationReplies.Contains(this))
                {
                    Communication.CommunicationReplies.Add(this);
                }
                if (CommunicationID != Communication.CommunicationID)
                {
                    CommunicationID = Communication.CommunicationID;
                }
            }
        }

        #endregion

    }
}
