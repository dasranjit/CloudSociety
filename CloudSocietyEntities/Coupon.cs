//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class Coupon
    {
        #region Primitive Properties
    	
        [StringLength(20, ErrorMessage="Number of  characters cannot be more than 20")]
        [Required]
        public virtual string CouponNo
        {
            get;
            set;
        }
    	
        [StringLength(10, ErrorMessage="Number of  characters cannot be more than 10")]
        [Required]
        public virtual string IPIN
        {
            get;
            set;
        }
        public virtual Nullable<decimal> DiscountPerc
        {
            get;
            set;
        }
        public virtual Nullable<int> DiscountAmount
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> ValidityStart
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> ValidityEnd
        {
            get;
            set;
        }
        public virtual Nullable<int> MinAmount
        {
            get;
            set;
        }
        public virtual Nullable<int> MaxAmount
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid CreatedByID
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime CreatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> UpdatedByID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> UpdatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> SubscriberID
        {
            get { return _subscriberID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_subscriberID != value)
                    {
                        if (Subscriber != null && Subscriber.SubscriberID != value)
                        {
                            Subscriber = null;
                        }
                        _subscriberID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _subscriberID;
        public virtual Nullable<System.Guid> SocietyID
        {
            get { return _societyID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_societyID != value)
                    {
                        if (Society != null && Society.SocietyID != value)
                        {
                            Society = null;
                        }
                        _societyID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _societyID;

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<SubscriptionInvoice> SubscriptionInvoices
        {
            get
            {
                if (_subscriptionInvoices == null)
                {
                    var newCollection = new FixupCollection<SubscriptionInvoice>();
                    newCollection.CollectionChanged += FixupSubscriptionInvoices;
                    _subscriptionInvoices = newCollection;
                }
                return _subscriptionInvoices;
            }
            set
            {
                if (!ReferenceEquals(_subscriptionInvoices, value))
                {
                    var previousValue = _subscriptionInvoices as FixupCollection<SubscriptionInvoice>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSubscriptionInvoices;
                    }
                    _subscriptionInvoices = value;
                    var newValue = value as FixupCollection<SubscriptionInvoice>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSubscriptionInvoices;
                    }
                }
            }
        }
        private ICollection<SubscriptionInvoice> _subscriptionInvoices;
    
        public virtual Society Society
        {
            get { return _society; }
            set
            {
                if (!ReferenceEquals(_society, value))
                {
                    var previousValue = _society;
                    _society = value;
                    FixupSociety(previousValue);
                }
            }
        }
        private Society _society;
    
        public virtual Subscriber Subscriber
        {
            get { return _subscriber; }
            set
            {
                if (!ReferenceEquals(_subscriber, value))
                {
                    var previousValue = _subscriber;
                    _subscriber = value;
                    FixupSubscriber(previousValue);
                }
            }
        }
        private Subscriber _subscriber;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupSociety(Society previousValue)
        {
            if (previousValue != null && previousValue.Coupons.Contains(this))
            {
                previousValue.Coupons.Remove(this);
            }
    
            if (Society != null)
            {
                if (!Society.Coupons.Contains(this))
                {
                    Society.Coupons.Add(this);
                }
                if (SocietyID != Society.SocietyID)
                {
                    SocietyID = Society.SocietyID;
                }
            }
            else if (!_settingFK)
            {
                SocietyID = null;
            }
        }
    
        private void FixupSubscriber(Subscriber previousValue)
        {
            if (previousValue != null && previousValue.Coupons_1.Contains(this))
            {
                previousValue.Coupons_1.Remove(this);
            }
    
            if (Subscriber != null)
            {
                if (!Subscriber.Coupons_1.Contains(this))
                {
                    Subscriber.Coupons_1.Add(this);
                }
                if (SubscriberID != Subscriber.SubscriberID)
                {
                    SubscriberID = Subscriber.SubscriberID;
                }
            }
            else if (!_settingFK)
            {
                SubscriberID = null;
            }
        }
    
        private void FixupSubscriptionInvoices(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SubscriptionInvoice item in e.NewItems)
                {
                    item.Coupon = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SubscriptionInvoice item in e.OldItems)
                {
                    if (ReferenceEquals(item.Coupon, this))
                    {
                        item.Coupon = null;
                    }
                }
            }
        }

        #endregion

    }
}
