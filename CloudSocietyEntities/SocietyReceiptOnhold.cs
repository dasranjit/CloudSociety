//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class SocietyReceiptOnhold
    {
        #region Primitive Properties
        [Required]
        public virtual System.Guid SocietyReceiptOnholdID
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid SocietyID
        {
            get { return _societyID; }
            set
            {
                if (_societyID != value)
                {
                    if (Society != null && Society.SocietyID != value)
                    {
                        Society = null;
                    }
                    if (SocietyBillSery != null && SocietyBillSery.SocietyID != value)
                    {
                        SocietyBillSery = null;
                    }
                    _societyID = value;
                }
            }
        }
        private System.Guid _societyID;
        [Required]
        public virtual System.Guid SocietyBuildingUnitID
        {
            get { return _societyBuildingUnitID; }
            set
            {
                if (_societyBuildingUnitID != value)
                {
                    if (SocietyBuildingUnit != null && SocietyBuildingUnit.SocietyBuildingUnitID != value)
                    {
                        SocietyBuildingUnit = null;
                    }
                    _societyBuildingUnitID = value;
                }
            }
        }
        private System.Guid _societyBuildingUnitID;
        [Required]
        public virtual System.Guid SocietyMemberID
        {
            get { return _societyMemberID; }
            set
            {
                if (_societyMemberID != value)
                {
                    if (SocietyMember != null && SocietyMember.SocietyMemberID != value)
                    {
                        SocietyMember = null;
                    }
                    _societyMemberID = value;
                }
            }
        }
        private System.Guid _societyMemberID;
        [Required]
        public virtual System.Guid SocietySubscriptionID
        {
            get { return _societySubscriptionID; }
            set
            {
                if (_societySubscriptionID != value)
                {
                    if (SocietySubscription != null && SocietySubscription.SocietySubscriptionID != value)
                    {
                        SocietySubscription = null;
                    }
                    _societySubscriptionID = value;
                }
            }
        }
        private System.Guid _societySubscriptionID;
        [Required]
        public virtual System.DateTime ReceiptDate
        {
            get;
            set;
        }
    	
        [StringLength(5, ErrorMessage="Number of  characters cannot be more than 5")]
        [Required]
        public virtual string BillAbbreviation
        {
            get { return _billAbbreviation; }
            set
            {
                if (_billAbbreviation != value)
                {
                    if (SocietyBillSery != null && SocietyBillSery.BillAbbreviation != value)
                    {
                        SocietyBillSery = null;
                    }
                    _billAbbreviation = value;
                }
            }
        }
        private string _billAbbreviation;
        [Required]
        public virtual decimal Amount
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid CreatedByID
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime CreatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> UpdatedByID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> UpdatedOn
        {
            get;
            set;
        }
    	
        [StringLength(250, ErrorMessage="Number of  characters cannot be more than 250")]
        [Required]
        public virtual string TransactionId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Society Society
        {
            get { return _society; }
            set
            {
                if (!ReferenceEquals(_society, value))
                {
                    var previousValue = _society;
                    _society = value;
                    FixupSociety(previousValue);
                }
            }
        }
        private Society _society;
    
        public virtual SocietyBillSeries SocietyBillSery
        {
            get { return _societyBillSery; }
            set
            {
                if (!ReferenceEquals(_societyBillSery, value))
                {
                    var previousValue = _societyBillSery;
                    _societyBillSery = value;
                    FixupSocietyBillSery(previousValue);
                }
            }
        }
        private SocietyBillSeries _societyBillSery;
    
        public virtual SocietyBuildingUnit SocietyBuildingUnit
        {
            get { return _societyBuildingUnit; }
            set
            {
                if (!ReferenceEquals(_societyBuildingUnit, value))
                {
                    var previousValue = _societyBuildingUnit;
                    _societyBuildingUnit = value;
                    FixupSocietyBuildingUnit(previousValue);
                }
            }
        }
        private SocietyBuildingUnit _societyBuildingUnit;
    
        public virtual SocietyMember SocietyMember
        {
            get { return _societyMember; }
            set
            {
                if (!ReferenceEquals(_societyMember, value))
                {
                    var previousValue = _societyMember;
                    _societyMember = value;
                    FixupSocietyMember(previousValue);
                }
            }
        }
        private SocietyMember _societyMember;
    
        public virtual SocietySubscription SocietySubscription
        {
            get { return _societySubscription; }
            set
            {
                if (!ReferenceEquals(_societySubscription, value))
                {
                    var previousValue = _societySubscription;
                    _societySubscription = value;
                    FixupSocietySubscription(previousValue);
                }
            }
        }
        private SocietySubscription _societySubscription;

        #endregion

        #region Association Fixup
    
        private void FixupSociety(Society previousValue)
        {
            if (previousValue != null && previousValue.SocietyReceiptOnholds.Contains(this))
            {
                previousValue.SocietyReceiptOnholds.Remove(this);
            }
    
            if (Society != null)
            {
                if (!Society.SocietyReceiptOnholds.Contains(this))
                {
                    Society.SocietyReceiptOnholds.Add(this);
                }
                if (SocietyID != Society.SocietyID)
                {
                    SocietyID = Society.SocietyID;
                }
            }
        }
    
        private void FixupSocietyBillSery(SocietyBillSeries previousValue)
        {
            if (previousValue != null && previousValue.SocietyReceiptOnholds.Contains(this))
            {
                previousValue.SocietyReceiptOnholds.Remove(this);
            }
    
            if (SocietyBillSery != null)
            {
                if (!SocietyBillSery.SocietyReceiptOnholds.Contains(this))
                {
                    SocietyBillSery.SocietyReceiptOnholds.Add(this);
                }
                if (SocietyID != SocietyBillSery.SocietyID)
                {
                    SocietyID = SocietyBillSery.SocietyID;
                }
                if (BillAbbreviation != SocietyBillSery.BillAbbreviation)
                {
                    BillAbbreviation = SocietyBillSery.BillAbbreviation;
                }
            }
        }
    
        private void FixupSocietyBuildingUnit(SocietyBuildingUnit previousValue)
        {
            if (previousValue != null && previousValue.SocietyReceiptOnholds.Contains(this))
            {
                previousValue.SocietyReceiptOnholds.Remove(this);
            }
    
            if (SocietyBuildingUnit != null)
            {
                if (!SocietyBuildingUnit.SocietyReceiptOnholds.Contains(this))
                {
                    SocietyBuildingUnit.SocietyReceiptOnholds.Add(this);
                }
                if (SocietyBuildingUnitID != SocietyBuildingUnit.SocietyBuildingUnitID)
                {
                    SocietyBuildingUnitID = SocietyBuildingUnit.SocietyBuildingUnitID;
                }
            }
        }
    
        private void FixupSocietyMember(SocietyMember previousValue)
        {
            if (previousValue != null && previousValue.SocietyReceiptOnholds.Contains(this))
            {
                previousValue.SocietyReceiptOnholds.Remove(this);
            }
    
            if (SocietyMember != null)
            {
                if (!SocietyMember.SocietyReceiptOnholds.Contains(this))
                {
                    SocietyMember.SocietyReceiptOnholds.Add(this);
                }
                if (SocietyMemberID != SocietyMember.SocietyMemberID)
                {
                    SocietyMemberID = SocietyMember.SocietyMemberID;
                }
            }
        }
    
        private void FixupSocietySubscription(SocietySubscription previousValue)
        {
            if (previousValue != null && previousValue.SocietyReceiptOnholds.Contains(this))
            {
                previousValue.SocietyReceiptOnholds.Remove(this);
            }
    
            if (SocietySubscription != null)
            {
                if (!SocietySubscription.SocietyReceiptOnholds.Contains(this))
                {
                    SocietySubscription.SocietyReceiptOnholds.Add(this);
                }
                if (SocietySubscriptionID != SocietySubscription.SocietySubscriptionID)
                {
                    SocietySubscriptionID = SocietySubscription.SocietySubscriptionID;
                }
            }
        }

        #endregion

    }
}
