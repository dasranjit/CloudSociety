//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class SocietySubscriptionInvoice
    {
        #region Primitive Properties
        [Required]
        public virtual System.Guid SocietySubscriptionInvoiceID
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid SocietySubscriptionID
        {
            get { return _societySubscriptionID; }
            set
            {
                if (_societySubscriptionID != value)
                {
                    if (SocietySubscription != null && SocietySubscription.SocietySubscriptionID != value)
                    {
                        SocietySubscription = null;
                    }
                    _societySubscriptionID = value;
                }
            }
        }
        private System.Guid _societySubscriptionID;
        [Required]
        public virtual short NoOfMembers
        {
            get;
            set;
        }
        [Required]
        public virtual decimal Amount
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid SubscriptionInvoiceID
        {
            get { return _subscriptionInvoiceID; }
            set
            {
                if (_subscriptionInvoiceID != value)
                {
                    if (SubscriptionInvoice != null && SubscriptionInvoice.SubscriptionInvoiceID != value)
                    {
                        SubscriptionInvoice = null;
                    }
                    _subscriptionInvoiceID = value;
                }
            }
        }
        private System.Guid _subscriptionInvoiceID;
        [Required]
        public virtual System.Guid CreatedByID
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime CreatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> UpdatedByID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> UpdatedOn
        {
            get;
            set;
        }
        [Required]
        public virtual byte SubscribedMonths
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual SocietySubscription SocietySubscription
        {
            get { return _societySubscription; }
            set
            {
                if (!ReferenceEquals(_societySubscription, value))
                {
                    var previousValue = _societySubscription;
                    _societySubscription = value;
                    FixupSocietySubscription(previousValue);
                }
            }
        }
        private SocietySubscription _societySubscription;
    
        public virtual SubscriptionInvoice SubscriptionInvoice
        {
            get { return _subscriptionInvoice; }
            set
            {
                if (!ReferenceEquals(_subscriptionInvoice, value))
                {
                    var previousValue = _subscriptionInvoice;
                    _subscriptionInvoice = value;
                    FixupSubscriptionInvoice(previousValue);
                }
            }
        }
        private SubscriptionInvoice _subscriptionInvoice;
    
        public virtual ICollection<SocietySubscriptionInvoiceService> SocietySubscriptionInvoiceServices
        {
            get
            {
                if (_societySubscriptionInvoiceServices == null)
                {
                    var newCollection = new FixupCollection<SocietySubscriptionInvoiceService>();
                    newCollection.CollectionChanged += FixupSocietySubscriptionInvoiceServices;
                    _societySubscriptionInvoiceServices = newCollection;
                }
                return _societySubscriptionInvoiceServices;
            }
            set
            {
                if (!ReferenceEquals(_societySubscriptionInvoiceServices, value))
                {
                    var previousValue = _societySubscriptionInvoiceServices as FixupCollection<SocietySubscriptionInvoiceService>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSocietySubscriptionInvoiceServices;
                    }
                    _societySubscriptionInvoiceServices = value;
                    var newValue = value as FixupCollection<SocietySubscriptionInvoiceService>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSocietySubscriptionInvoiceServices;
                    }
                }
            }
        }
        private ICollection<SocietySubscriptionInvoiceService> _societySubscriptionInvoiceServices;

        #endregion

        #region Association Fixup
    
        private void FixupSocietySubscription(SocietySubscription previousValue)
        {
            if (previousValue != null && previousValue.SocietySubscriptionInvoices.Contains(this))
            {
                previousValue.SocietySubscriptionInvoices.Remove(this);
            }
    
            if (SocietySubscription != null)
            {
                if (!SocietySubscription.SocietySubscriptionInvoices.Contains(this))
                {
                    SocietySubscription.SocietySubscriptionInvoices.Add(this);
                }
                if (SocietySubscriptionID != SocietySubscription.SocietySubscriptionID)
                {
                    SocietySubscriptionID = SocietySubscription.SocietySubscriptionID;
                }
            }
        }
    
        private void FixupSubscriptionInvoice(SubscriptionInvoice previousValue)
        {
            if (previousValue != null && previousValue.SocietySubscriptionInvoices.Contains(this))
            {
                previousValue.SocietySubscriptionInvoices.Remove(this);
            }
    
            if (SubscriptionInvoice != null)
            {
                if (!SubscriptionInvoice.SocietySubscriptionInvoices.Contains(this))
                {
                    SubscriptionInvoice.SocietySubscriptionInvoices.Add(this);
                }
                if (SubscriptionInvoiceID != SubscriptionInvoice.SubscriptionInvoiceID)
                {
                    SubscriptionInvoiceID = SubscriptionInvoice.SubscriptionInvoiceID;
                }
            }
        }
    
        private void FixupSocietySubscriptionInvoiceServices(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SocietySubscriptionInvoiceService item in e.NewItems)
                {
                    item.SocietySubscriptionInvoice = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SocietySubscriptionInvoiceService item in e.OldItems)
                {
                    if (ReferenceEquals(item.SocietySubscriptionInvoice, this))
                    {
                        item.SocietySubscriptionInvoice = null;
                    }
                }
            }
        }

        #endregion

    }
}
