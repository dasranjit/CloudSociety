//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class SocietyCollectionReversal
    {
        #region Primitive Properties
        [Required]
        public virtual System.Guid SocietyCollectionReversalID
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> SocietyReceiptID
        {
            get { return _societyReceiptID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_societyReceiptID != value)
                    {
                        if (SocietyReceipt != null && SocietyReceipt.SocietyReceiptID != value)
                        {
                            SocietyReceipt = null;
                        }
                        _societyReceiptID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _societyReceiptID;
        [Required]
        public virtual System.Guid SocietyID
        {
            get { return _societyID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_societyID != value)
                    {
                        if (Society != null && Society.SocietyID != value)
                        {
                            Society = null;
                        }
                        if (SocietyBillSery != null && SocietyBillSery.SocietyID != value)
                        {
                            SocietyBillSery = null;
                        }
                        if (SocietyPayMode != null && SocietyPayMode.SocietyID != value)
                        {
                            SocietyPayMode = null;
                        }
                        _societyID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _societyID;
        [Required]
        public virtual System.Guid SocietyBuildingUnitID
        {
            get { return _societyBuildingUnitID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_societyBuildingUnitID != value)
                    {
                        if (SocietyBuildingUnit != null && SocietyBuildingUnit.SocietyBuildingUnitID != value)
                        {
                            SocietyBuildingUnit = null;
                        }
                        _societyBuildingUnitID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _societyBuildingUnitID;
        [Required]
        public virtual System.Guid SocietyMemberID
        {
            get { return _societyMemberID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_societyMemberID != value)
                    {
                        if (SocietyMember != null && SocietyMember.SocietyMemberID != value)
                        {
                            SocietyMember = null;
                        }
                        _societyMemberID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _societyMemberID;
        [Required]
        public virtual System.Guid SocietySubscriptionID
        {
            get { return _societySubscriptionID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_societySubscriptionID != value)
                    {
                        if (SocietySubscription != null && SocietySubscription.SocietySubscriptionID != value)
                        {
                            SocietySubscription = null;
                        }
                        _societySubscriptionID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _societySubscriptionID;
        [Required]
        public virtual System.DateTime ReversalDate
        {
            get;
            set;
        }
    	
        [StringLength(9, ErrorMessage="Number of  characters cannot be more than 9")]
        public virtual string AcYear
        {
            get;
            set;
        }
        public virtual Nullable<int> Serial
        {
            get;
            set;
        }
    	
        [StringLength(5, ErrorMessage="Number of  characters cannot be more than 5")]
        [Required]
        public virtual string BillAbbreviation
        {
            get { return _billAbbreviation; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_billAbbreviation != value)
                    {
                        if (SocietyBillSery != null && SocietyBillSery.BillAbbreviation != value)
                        {
                            SocietyBillSery = null;
                        }
                        _billAbbreviation = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _billAbbreviation;
    	
        [StringLength(30, ErrorMessage="Number of  characters cannot be more than 30")]
        public virtual string DocNo
        {
            get;
            set;
        }
        public virtual Nullable<decimal> PrincipalAdjusted
        {
            get;
            set;
        }
        public virtual Nullable<decimal> InterestAdjusted
        {
            get;
            set;
        }
        public virtual Nullable<decimal> NonChgAdjusted
        {
            get;
            set;
        }
        public virtual Nullable<decimal> TaxAdjusted
        {
            get;
            set;
        }
        public virtual Nullable<decimal> Advance
        {
            get;
            set;
        }
    	
        [StringLength(255, ErrorMessage="Number of  characters cannot be more than 255")]
        public virtual string Particulars
        {
            get;
            set;
        }
    	
        [StringLength(2, ErrorMessage="Number of  characters cannot be more than 2")]
        [Required]
        public virtual string PayModeCode
        {
            get { return _payModeCode; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_payModeCode != value)
                    {
                        if (SocietyPayMode != null && SocietyPayMode.PayModeCode != value)
                        {
                            SocietyPayMode = null;
                        }
                        _payModeCode = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _payModeCode;
    	
        [StringLength(10, ErrorMessage="Number of  characters cannot be more than 10")]
        public virtual string PayRefNo
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> PayRefDate
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> BankID
        {
            get { return _bankID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_bankID != value)
                    {
                        if (Bank != null && Bank.BankID != value)
                        {
                            Bank = null;
                        }
                        _bankID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _bankID;
    	
        [StringLength(100, ErrorMessage="Number of  characters cannot be more than 100")]
        public virtual string Branch
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> AcTransactionID
        {
            get { return _acTransactionID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_acTransactionID != value)
                    {
                        if (AcTransaction != null && AcTransaction.AcTransactionID != value)
                        {
                            AcTransaction = null;
                        }
                        _acTransactionID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _acTransactionID;
        [Required]
        public virtual System.Guid CreatedByID
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime CreatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> UpdatedByID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> UpdatedOn
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual AcTransaction AcTransaction
        {
            get { return _acTransaction; }
            set
            {
                if (!ReferenceEquals(_acTransaction, value))
                {
                    var previousValue = _acTransaction;
                    _acTransaction = value;
                    FixupAcTransaction(previousValue);
                }
            }
        }
        private AcTransaction _acTransaction;
    
        public virtual Bank Bank
        {
            get { return _bank; }
            set
            {
                if (!ReferenceEquals(_bank, value))
                {
                    var previousValue = _bank;
                    _bank = value;
                    FixupBank(previousValue);
                }
            }
        }
        private Bank _bank;
    
        public virtual Society Society
        {
            get { return _society; }
            set
            {
                if (!ReferenceEquals(_society, value))
                {
                    var previousValue = _society;
                    _society = value;
                    FixupSociety(previousValue);
                }
            }
        }
        private Society _society;
    
        public virtual SocietyBillSeries SocietyBillSery
        {
            get { return _societyBillSery; }
            set
            {
                if (!ReferenceEquals(_societyBillSery, value))
                {
                    var previousValue = _societyBillSery;
                    _societyBillSery = value;
                    FixupSocietyBillSery(previousValue);
                }
            }
        }
        private SocietyBillSeries _societyBillSery;
    
        public virtual SocietyBuildingUnit SocietyBuildingUnit
        {
            get { return _societyBuildingUnit; }
            set
            {
                if (!ReferenceEquals(_societyBuildingUnit, value))
                {
                    var previousValue = _societyBuildingUnit;
                    _societyBuildingUnit = value;
                    FixupSocietyBuildingUnit(previousValue);
                }
            }
        }
        private SocietyBuildingUnit _societyBuildingUnit;
    
        public virtual SocietyMember SocietyMember
        {
            get { return _societyMember; }
            set
            {
                if (!ReferenceEquals(_societyMember, value))
                {
                    var previousValue = _societyMember;
                    _societyMember = value;
                    FixupSocietyMember(previousValue);
                }
            }
        }
        private SocietyMember _societyMember;
    
        public virtual SocietyPayMode SocietyPayMode
        {
            get { return _societyPayMode; }
            set
            {
                if (!ReferenceEquals(_societyPayMode, value))
                {
                    var previousValue = _societyPayMode;
                    _societyPayMode = value;
                    FixupSocietyPayMode(previousValue);
                }
            }
        }
        private SocietyPayMode _societyPayMode;
    
        public virtual SocietyReceipt SocietyReceipt
        {
            get { return _societyReceipt; }
            set
            {
                if (!ReferenceEquals(_societyReceipt, value))
                {
                    var previousValue = _societyReceipt;
                    _societyReceipt = value;
                    FixupSocietyReceipt(previousValue);
                }
            }
        }
        private SocietyReceipt _societyReceipt;
    
        public virtual SocietySubscription SocietySubscription
        {
            get { return _societySubscription; }
            set
            {
                if (!ReferenceEquals(_societySubscription, value))
                {
                    var previousValue = _societySubscription;
                    _societySubscription = value;
                    FixupSocietySubscription(previousValue);
                }
            }
        }
        private SocietySubscription _societySubscription;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupAcTransaction(AcTransaction previousValue)
        {
            if (previousValue != null && previousValue.SocietyCollectionReversals.Contains(this))
            {
                previousValue.SocietyCollectionReversals.Remove(this);
            }
    
            if (AcTransaction != null)
            {
                if (!AcTransaction.SocietyCollectionReversals.Contains(this))
                {
                    AcTransaction.SocietyCollectionReversals.Add(this);
                }
                if (AcTransactionID != AcTransaction.AcTransactionID)
                {
                    AcTransactionID = AcTransaction.AcTransactionID;
                }
            }
            else if (!_settingFK)
            {
                AcTransactionID = null;
            }
        }
    
        private void FixupBank(Bank previousValue)
        {
            if (previousValue != null && previousValue.SocietyCollectionReversals.Contains(this))
            {
                previousValue.SocietyCollectionReversals.Remove(this);
            }
    
            if (Bank != null)
            {
                if (!Bank.SocietyCollectionReversals.Contains(this))
                {
                    Bank.SocietyCollectionReversals.Add(this);
                }
                if (BankID != Bank.BankID)
                {
                    BankID = Bank.BankID;
                }
            }
            else if (!_settingFK)
            {
                BankID = null;
            }
        }
    
        private void FixupSociety(Society previousValue)
        {
            if (previousValue != null && previousValue.SocietyCollectionReversals.Contains(this))
            {
                previousValue.SocietyCollectionReversals.Remove(this);
            }
    
            if (Society != null)
            {
                if (!Society.SocietyCollectionReversals.Contains(this))
                {
                    Society.SocietyCollectionReversals.Add(this);
                }
                if (SocietyID != Society.SocietyID)
                {
                    SocietyID = Society.SocietyID;
                }
            }
        }
    
        private void FixupSocietyBillSery(SocietyBillSeries previousValue)
        {
            if (previousValue != null && previousValue.SocietyCollectionReversals.Contains(this))
            {
                previousValue.SocietyCollectionReversals.Remove(this);
            }
    
            if (SocietyBillSery != null)
            {
                if (!SocietyBillSery.SocietyCollectionReversals.Contains(this))
                {
                    SocietyBillSery.SocietyCollectionReversals.Add(this);
                }
                if (SocietyID != SocietyBillSery.SocietyID)
                {
                    SocietyID = SocietyBillSery.SocietyID;
                }
                if (BillAbbreviation != SocietyBillSery.BillAbbreviation)
                {
                    BillAbbreviation = SocietyBillSery.BillAbbreviation;
                }
            }
        }
    
        private void FixupSocietyBuildingUnit(SocietyBuildingUnit previousValue)
        {
            if (previousValue != null && previousValue.SocietyCollectionReversals.Contains(this))
            {
                previousValue.SocietyCollectionReversals.Remove(this);
            }
    
            if (SocietyBuildingUnit != null)
            {
                if (!SocietyBuildingUnit.SocietyCollectionReversals.Contains(this))
                {
                    SocietyBuildingUnit.SocietyCollectionReversals.Add(this);
                }
                if (SocietyBuildingUnitID != SocietyBuildingUnit.SocietyBuildingUnitID)
                {
                    SocietyBuildingUnitID = SocietyBuildingUnit.SocietyBuildingUnitID;
                }
            }
        }
    
        private void FixupSocietyMember(SocietyMember previousValue)
        {
            if (previousValue != null && previousValue.SocietyCollectionReversals.Contains(this))
            {
                previousValue.SocietyCollectionReversals.Remove(this);
            }
    
            if (SocietyMember != null)
            {
                if (!SocietyMember.SocietyCollectionReversals.Contains(this))
                {
                    SocietyMember.SocietyCollectionReversals.Add(this);
                }
                if (SocietyMemberID != SocietyMember.SocietyMemberID)
                {
                    SocietyMemberID = SocietyMember.SocietyMemberID;
                }
            }
        }
    
        private void FixupSocietyPayMode(SocietyPayMode previousValue)
        {
            if (previousValue != null && previousValue.SocietyCollectionReversals.Contains(this))
            {
                previousValue.SocietyCollectionReversals.Remove(this);
            }
    
            if (SocietyPayMode != null)
            {
                if (!SocietyPayMode.SocietyCollectionReversals.Contains(this))
                {
                    SocietyPayMode.SocietyCollectionReversals.Add(this);
                }
                if (SocietyID != SocietyPayMode.SocietyID)
                {
                    SocietyID = SocietyPayMode.SocietyID;
                }
                if (PayModeCode != SocietyPayMode.PayModeCode)
                {
                    PayModeCode = SocietyPayMode.PayModeCode;
                }
            }
        }
    
        private void FixupSocietyReceipt(SocietyReceipt previousValue)
        {
            if (previousValue != null && previousValue.SocietyCollectionReversals.Contains(this))
            {
                previousValue.SocietyCollectionReversals.Remove(this);
            }
    
            if (SocietyReceipt != null)
            {
                if (!SocietyReceipt.SocietyCollectionReversals.Contains(this))
                {
                    SocietyReceipt.SocietyCollectionReversals.Add(this);
                }
                if (SocietyReceiptID != SocietyReceipt.SocietyReceiptID)
                {
                    SocietyReceiptID = SocietyReceipt.SocietyReceiptID;
                }
            }
            else if (!_settingFK)
            {
                SocietyReceiptID = null;
            }
        }
    
        private void FixupSocietySubscription(SocietySubscription previousValue)
        {
            if (previousValue != null && previousValue.SocietyCollectionReversals.Contains(this))
            {
                previousValue.SocietyCollectionReversals.Remove(this);
            }
    
            if (SocietySubscription != null)
            {
                if (!SocietySubscription.SocietyCollectionReversals.Contains(this))
                {
                    SocietySubscription.SocietyCollectionReversals.Add(this);
                }
                if (SocietySubscriptionID != SocietySubscription.SocietySubscriptionID)
                {
                    SocietySubscriptionID = SocietySubscription.SocietySubscriptionID;
                }
            }
        }

        #endregion

    }
}
