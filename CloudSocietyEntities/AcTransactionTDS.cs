//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class AcTransactionTDS
    {
        #region Primitive Properties
        [Required]
        public virtual System.Guid AcTransactionTDSID
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid AcTransactionID
        {
            get { return _acTransactionID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_acTransactionID != value)
                    {
                        if (AcTransaction != null && AcTransaction.AcTransactionID != value)
                        {
                            AcTransaction = null;
                        }
                        _acTransactionID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _acTransactionID;
        [Required]
        public virtual System.Guid SocietyID
        {
            get { return _societyID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_societyID != value)
                    {
                        if (AcHead_Ac != null && AcHead_Ac.SocietyID != value)
                        {
                            AcHead_Ac = null;
                        }
                        if (AcHead_TDSAc != null && AcHead_TDSAc.SocietyID != value)
                        {
                            AcHead_TDSAc = null;
                        }
                        if (Society != null && Society.SocietyID != value)
                        {
                            Society = null;
                        }
                        _societyID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _societyID;
        public virtual Nullable<System.Guid> TDSCategoryID
        {
            get { return _tDSCategoryID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_tDSCategoryID != value)
                    {
                        if (TDSCategory != null && TDSCategory.TDSCategoryID != value)
                        {
                            TDSCategory = null;
                        }
                        _tDSCategoryID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _tDSCategoryID;
        [Required]
        public virtual System.Guid TDSAcccountID
        {
            get { return _tDSAcccountID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_tDSAcccountID != value)
                    {
                        if (AcHead_TDSAc != null && AcHead_TDSAc.AcHeadID != value)
                        {
                            AcHead_TDSAc = null;
                        }
                        _tDSAcccountID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _tDSAcccountID;
        [Required]
        public virtual System.Guid AcHeadID
        {
            get { return _acHeadID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_acHeadID != value)
                    {
                        if (AcHead_Ac != null && AcHead_Ac.AcHeadID != value)
                        {
                            AcHead_Ac = null;
                        }
                        _acHeadID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _acHeadID;
        public virtual Nullable<decimal> GrossAmount
        {
            get;
            set;
        }
        public virtual Nullable<decimal> TDSAmount
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> PayTransactionID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> TDSDepositDate
        {
            get;
            set;
        }
    	
        [StringLength(10, ErrorMessage="Number of  characters cannot be more than 10")]
        public virtual string ChallanNo
        {
            get;
            set;
        }
    	
        [StringLength(10, ErrorMessage="Number of  characters cannot be more than 10")]
        public virtual string BSRCode
        {
            get;
            set;
        }
    	
        [StringLength(20, ErrorMessage="Number of  characters cannot be more than 20")]
        public virtual string ReceiptNo
        {
            get;
            set;
        }
    	
        [StringLength(20, ErrorMessage="Number of  characters cannot be more than 20")]
        public virtual string CertificateNo
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> CertificateDate
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid CreatedByID
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime CreatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> UpdatedByID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> UpdatedOn
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual AcHead AcHead_Ac
        {
            get { return _acHead_Ac; }
            set
            {
                if (!ReferenceEquals(_acHead_Ac, value))
                {
                    var previousValue = _acHead_Ac;
                    _acHead_Ac = value;
                    FixupAcHead_Ac(previousValue);
                }
            }
        }
        private AcHead _acHead_Ac;
    
        public virtual AcHead AcHead_TDSAc
        {
            get { return _acHead_TDSAc; }
            set
            {
                if (!ReferenceEquals(_acHead_TDSAc, value))
                {
                    var previousValue = _acHead_TDSAc;
                    _acHead_TDSAc = value;
                    FixupAcHead_TDSAc(previousValue);
                }
            }
        }
        private AcHead _acHead_TDSAc;
    
        public virtual AcTransaction AcTransaction
        {
            get { return _acTransaction; }
            set
            {
                if (!ReferenceEquals(_acTransaction, value))
                {
                    var previousValue = _acTransaction;
                    _acTransaction = value;
                    FixupAcTransaction(previousValue);
                }
            }
        }
        private AcTransaction _acTransaction;
    
        public virtual Society Society
        {
            get { return _society; }
            set
            {
                if (!ReferenceEquals(_society, value))
                {
                    var previousValue = _society;
                    _society = value;
                    FixupSociety(previousValue);
                }
            }
        }
        private Society _society;
    
        public virtual TDSCategory TDSCategory
        {
            get { return _tDSCategory; }
            set
            {
                if (!ReferenceEquals(_tDSCategory, value))
                {
                    var previousValue = _tDSCategory;
                    _tDSCategory = value;
                    FixupTDSCategory(previousValue);
                }
            }
        }
        private TDSCategory _tDSCategory;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupAcHead_Ac(AcHead previousValue)
        {
            if (previousValue != null && previousValue.AcTransactionTDS_Ac.Contains(this))
            {
                previousValue.AcTransactionTDS_Ac.Remove(this);
            }
    
            if (AcHead_Ac != null)
            {
                if (!AcHead_Ac.AcTransactionTDS_Ac.Contains(this))
                {
                    AcHead_Ac.AcTransactionTDS_Ac.Add(this);
                }
                if (SocietyID != AcHead_Ac.SocietyID)
                {
                    SocietyID = AcHead_Ac.SocietyID;
                }
                if (AcHeadID != AcHead_Ac.AcHeadID)
                {
                    AcHeadID = AcHead_Ac.AcHeadID;
                }
            }
        }
    
        private void FixupAcHead_TDSAc(AcHead previousValue)
        {
            if (previousValue != null && previousValue.AcTransactionTDS_TDSAc.Contains(this))
            {
                previousValue.AcTransactionTDS_TDSAc.Remove(this);
            }
    
            if (AcHead_TDSAc != null)
            {
                if (!AcHead_TDSAc.AcTransactionTDS_TDSAc.Contains(this))
                {
                    AcHead_TDSAc.AcTransactionTDS_TDSAc.Add(this);
                }
                if (SocietyID != AcHead_TDSAc.SocietyID)
                {
                    SocietyID = AcHead_TDSAc.SocietyID;
                }
                if (TDSAcccountID != AcHead_TDSAc.AcHeadID)
                {
                    TDSAcccountID = AcHead_TDSAc.AcHeadID;
                }
            }
        }
    
        private void FixupAcTransaction(AcTransaction previousValue)
        {
            if (previousValue != null && previousValue.AcTransactionTDS.Contains(this))
            {
                previousValue.AcTransactionTDS.Remove(this);
            }
    
            if (AcTransaction != null)
            {
                if (!AcTransaction.AcTransactionTDS.Contains(this))
                {
                    AcTransaction.AcTransactionTDS.Add(this);
                }
                if (AcTransactionID != AcTransaction.AcTransactionID)
                {
                    AcTransactionID = AcTransaction.AcTransactionID;
                }
            }
        }
    
        private void FixupSociety(Society previousValue)
        {
            if (previousValue != null && previousValue.AcTransactionTDS.Contains(this))
            {
                previousValue.AcTransactionTDS.Remove(this);
            }
    
            if (Society != null)
            {
                if (!Society.AcTransactionTDS.Contains(this))
                {
                    Society.AcTransactionTDS.Add(this);
                }
                if (SocietyID != Society.SocietyID)
                {
                    SocietyID = Society.SocietyID;
                }
            }
        }
    
        private void FixupTDSCategory(TDSCategory previousValue)
        {
            if (previousValue != null && previousValue.AcTransactionTDS.Contains(this))
            {
                previousValue.AcTransactionTDS.Remove(this);
            }
    
            if (TDSCategory != null)
            {
                if (!TDSCategory.AcTransactionTDS.Contains(this))
                {
                    TDSCategory.AcTransactionTDS.Add(this);
                }
                if (TDSCategoryID != TDSCategory.TDSCategoryID)
                {
                    TDSCategoryID = TDSCategory.TDSCategoryID;
                }
            }
            else if (!_settingFK)
            {
                TDSCategoryID = null;
            }
        }

        #endregion

    }
}
