//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class SocietyInvestment
    {
        #region Primitive Properties
        [Required]
        public virtual System.Guid SocietyInvestmentID
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid SocietyID
        {
            get { return _societyID; }
            set
            {
                if (_societyID != value)
                {
                    if (Society != null && Society.SocietyID != value)
                    {
                        Society = null;
                    }
                    _societyID = value;
                }
            }
        }
        private System.Guid _societyID;
        [Required]
        public virtual System.Guid BankID
        {
            get { return _bankID; }
            set
            {
                if (_bankID != value)
                {
                    if (BankEntity != null && BankEntity.BankID != value)
                    {
                        BankEntity = null;
                    }
                    _bankID = value;
                }
            }
        }
        private System.Guid _bankID;
    	
        [StringLength(100, ErrorMessage="Number of  characters cannot be more than 100")]
        public virtual string Bank
        {
            get;
            set;
        }
    	
        [StringLength(30, ErrorMessage="Number of  characters cannot be more than 30")]
        [Required]
        public virtual string DocumentNo
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime DocumentDate
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime MaturityDate
        {
            get;
            set;
        }
        [Required]
        public virtual decimal Amount
        {
            get;
            set;
        }
        [Required]
        public virtual decimal InterestRate
        {
            get;
            set;
        }
    	
        [StringLength(10, ErrorMessage="Number of  characters cannot be more than 10")]
        public virtual string ChequeNo
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> ChequeDate
        {
            get;
            set;
        }
        [Required]
        public virtual decimal MaturityAmount
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> ClosureDate
        {
            get;
            set;
        }
        [Required]
        public virtual decimal ClosureAmount
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> RealizationDate
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid CreatedByID
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime CreatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> UpdatedByID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> UpdatedOn
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Bank BankEntity
        {
            get { return _bankEntity; }
            set
            {
                if (!ReferenceEquals(_bankEntity, value))
                {
                    var previousValue = _bankEntity;
                    _bankEntity = value;
                    FixupBankEntity(previousValue);
                }
            }
        }
        private Bank _bankEntity;
    
        public virtual Society Society
        {
            get { return _society; }
            set
            {
                if (!ReferenceEquals(_society, value))
                {
                    var previousValue = _society;
                    _society = value;
                    FixupSociety(previousValue);
                }
            }
        }
        private Society _society;

        #endregion

        #region Association Fixup
    
        private void FixupBankEntity(Bank previousValue)
        {
            if (previousValue != null && previousValue.SocietyInvestments.Contains(this))
            {
                previousValue.SocietyInvestments.Remove(this);
            }
    
            if (BankEntity != null)
            {
                if (!BankEntity.SocietyInvestments.Contains(this))
                {
                    BankEntity.SocietyInvestments.Add(this);
                }
                if (BankID != BankEntity.BankID)
                {
                    BankID = BankEntity.BankID;
                }
            }
        }
    
        private void FixupSociety(Society previousValue)
        {
            if (previousValue != null && previousValue.SocietyInvestments.Contains(this))
            {
                previousValue.SocietyInvestments.Remove(this);
            }
    
            if (Society != null)
            {
                if (!Society.SocietyInvestments.Contains(this))
                {
                    Society.SocietyInvestments.Add(this);
                }
                if (SocietyID != Society.SocietyID)
                {
                    SocietyID = Society.SocietyID;
                }
            }
        }

        #endregion

    }
}
