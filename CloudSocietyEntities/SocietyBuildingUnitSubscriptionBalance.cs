//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace CloudSocietyEntities
{
    public partial class SocietyBuildingUnitSubscriptionBalance
    {
        #region Primitive Properties
        [Required]
        public virtual System.Guid SocietyBuildingUnitID
        {
            get { return _societyBuildingUnitID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_societyBuildingUnitID != value)
                    {
                        if (SocietyBuildingUnit != null && SocietyBuildingUnit.SocietyBuildingUnitID != value)
                        {
                            SocietyBuildingUnit = null;
                        }
                        _societyBuildingUnitID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _societyBuildingUnitID;
        public virtual Nullable<System.Guid> SocietySubscriptionID
        {
            get { return _societySubscriptionID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_societySubscriptionID != value)
                    {
                        if (SocietySubscription != null && SocietySubscription.SocietySubscriptionID != value)
                        {
                            SocietySubscription = null;
                        }
                        _societySubscriptionID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _societySubscriptionID;
        public virtual Nullable<decimal> PrincipalAmount
        {
            get;
            set;
        }
        public virtual Nullable<decimal> InterestAmount
        {
            get;
            set;
        }
        public virtual Nullable<decimal> PrincipalReceipt
        {
            get;
            set;
        }
        public virtual Nullable<decimal> InterestReceipt
        {
            get;
            set;
        }
        public virtual Nullable<decimal> SpecialBillAmount
        {
            get;
            set;
        }
        public virtual Nullable<decimal> SpecialBillReceipt
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid CreatedByID
        {
            get;
            set;
        }
        [Required]
        public virtual System.DateTime CreatedOn
        {
            get;
            set;
        }
        public virtual Nullable<System.Guid> UpdatedByID
        {
            get;
            set;
        }
        public virtual Nullable<System.DateTime> UpdatedOn
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid SocietyBuildingUnitSubscriptionBalanceID
        {
            get;
            set;
        }
    	
        [StringLength(5, ErrorMessage="Number of  characters cannot be more than 5")]
        [Required]
        public virtual string BillAbbreviation
        {
            get;
            set;
        }
        public virtual Nullable<decimal> TaxAmount
        {
            get;
            set;
        }
        public virtual Nullable<decimal> TaxReceipt
        {
            get;
            set;
        }
        public virtual Nullable<decimal> Advance
        {
            get;
            set;
        }
        [Required]
        public virtual System.Guid SocietyMemberID
        {
            get { return _societyMemberID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_societyMemberID != value)
                    {
                        if (SocietyMember != null && SocietyMember.SocietyMemberID != value)
                        {
                            SocietyMember = null;
                        }
                        _societyMemberID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _societyMemberID;
        public virtual Nullable<decimal> AdvanceAdjusted
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual SocietyBuildingUnit SocietyBuildingUnit
        {
            get { return _societyBuildingUnit; }
            set
            {
                if (!ReferenceEquals(_societyBuildingUnit, value))
                {
                    var previousValue = _societyBuildingUnit;
                    _societyBuildingUnit = value;
                    FixupSocietyBuildingUnit(previousValue);
                }
            }
        }
        private SocietyBuildingUnit _societyBuildingUnit;
    
        public virtual SocietySubscription SocietySubscription
        {
            get { return _societySubscription; }
            set
            {
                if (!ReferenceEquals(_societySubscription, value))
                {
                    var previousValue = _societySubscription;
                    _societySubscription = value;
                    FixupSocietySubscription(previousValue);
                }
            }
        }
        private SocietySubscription _societySubscription;
    
        public virtual SocietyMember SocietyMember
        {
            get { return _societyMember; }
            set
            {
                if (!ReferenceEquals(_societyMember, value))
                {
                    var previousValue = _societyMember;
                    _societyMember = value;
                    FixupSocietyMember(previousValue);
                }
            }
        }
        private SocietyMember _societyMember;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupSocietyBuildingUnit(SocietyBuildingUnit previousValue)
        {
            if (previousValue != null && previousValue.SocietyBuildingUnitSubscriptionBalances.Contains(this))
            {
                previousValue.SocietyBuildingUnitSubscriptionBalances.Remove(this);
            }
    
            if (SocietyBuildingUnit != null)
            {
                if (!SocietyBuildingUnit.SocietyBuildingUnitSubscriptionBalances.Contains(this))
                {
                    SocietyBuildingUnit.SocietyBuildingUnitSubscriptionBalances.Add(this);
                }
                if (SocietyBuildingUnitID != SocietyBuildingUnit.SocietyBuildingUnitID)
                {
                    SocietyBuildingUnitID = SocietyBuildingUnit.SocietyBuildingUnitID;
                }
            }
        }
    
        private void FixupSocietySubscription(SocietySubscription previousValue)
        {
            if (previousValue != null && previousValue.SocietyBuildingUnitSubscriptionBalances.Contains(this))
            {
                previousValue.SocietyBuildingUnitSubscriptionBalances.Remove(this);
            }
    
            if (SocietySubscription != null)
            {
                if (!SocietySubscription.SocietyBuildingUnitSubscriptionBalances.Contains(this))
                {
                    SocietySubscription.SocietyBuildingUnitSubscriptionBalances.Add(this);
                }
                if (SocietySubscriptionID != SocietySubscription.SocietySubscriptionID)
                {
                    SocietySubscriptionID = SocietySubscription.SocietySubscriptionID;
                }
            }
            else if (!_settingFK)
            {
                SocietySubscriptionID = null;
            }
        }
    
        private void FixupSocietyMember(SocietyMember previousValue)
        {
            if (previousValue != null && previousValue.SocietyBuildingUnitSubscriptionBalances.Contains(this))
            {
                previousValue.SocietyBuildingUnitSubscriptionBalances.Remove(this);
            }
    
            if (SocietyMember != null)
            {
                if (!SocietyMember.SocietyBuildingUnitSubscriptionBalances.Contains(this))
                {
                    SocietyMember.SocietyBuildingUnitSubscriptionBalances.Add(this);
                }
                if (SocietyMemberID != SocietyMember.SocietyMemberID)
                {
                    SocietyMemberID = SocietyMember.SocietyMemberID;
                }
            }
        }

        #endregion

    }
}
