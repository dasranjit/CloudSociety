@model CloudSocietyEntities.SocietySubscription
@{
    ViewBag.Title = "Change Society Subscription";
    ViewBag.Header = "Change Society Subscription";
    Layout = "~/Views/Shared/SubscriberLayout.cshtml";
}
<script src="@Url.Content("~/Scripts/SocietySubscriptionCreate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () { $("input.autocompleteOff").attr("autocomplete", "off"); });
</script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(false, "Following errors occurred while processing your request")
    <fieldset style="width: 750px">
        <legend>Change Society Subscription</legend>
        @Html.HiddenFor(model => model.SocietySubscriptionID)
        <br />
        <table border="0" cellpadding="0" cellspacing="0">
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.SubscriptionStart)
                </td>
                <td>
                    <label id="SubscriptionStart">@String.Format("{0:dd-MMM-yyyy}", Model.SubscriptionStart)</label>
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.SubscriptionEnd)
                </td>
                <td>
                    <label id="SubscriptionEnd">@String.Format("{0:dd-MMM-yyyy}", Model.SubscriptionEnd)</label>
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.PaidTillDate)
                </td>
                <td>
                    @String.Format("{0:dd-MMM-yyyy}", Model.PaidTillDate)
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.NoOfMembers)
                </td>
                <td>
                    @{var totnos = Model.NoOfMembers + Model.NoOfInvoicedMembers;}
                    @totnos
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.InvoicedMonths)
                </td>
                <td>
                    @{var totmths = Model.InvoicedMonths + Model.PaidMonths;}
                    @totmths
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.NoOfAdditionalMembers)
                </td>
                <td>
                    <input class="text-box single-line autocompleteOff" data-val="true" data-val-number="The field NoOfAdditionalMembers must be a number." data-val-required="The NoOfAdditionalMembers field is required." id="NoOfAdditionalMembers" name="NoOfAdditionalMembers" type="text" value="@Model.NoOfAdditionalMembers"  onkeyup ="NoOfAdditionalMembers_onkeyup(this,@Model.NoOfMembers,@Model.NoOfInvoicedMembers,@Model.PaidMonths,@Model.InvoicedMonths)" /><label
                        id="lblBlankSpace1" style="visibility: hidden;">aaaaaaaaaaaaaaaaaaaaaaaa</label>
                    <span class="field-validation-valid" data-valmsg-for="NoOfAdditionalMembers" data-valmsg-replace="true">
                    </span>
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.SubscribedMonths)
                </td>
                <td>
                    <input class="text-box single-line autocompleteOff" data-val="true" data-val-number="The field SubscribedMonths must be a number." data-val-required="The SubscribedMonths field is required." id="SubscribedMonths" name="SubscribedMonths" type="text" value="@Model.SubscribedMonths" onkeyup ="SubscribedMonths_onkeyup(this,@Model.NoOfMembers,@Model.NoOfInvoicedMembers,@Model.PaidMonths,@Model.InvoicedMonths)" /><label
                        id="lblBlankSpace2" style="visibility: hidden;">aaaaaaaaaaaaaaaaaaaaaaaa</label>
                    <span class="field-validation-valid" data-valmsg-for="SubscribedMonths" data-valmsg-replace="true">
                    </span>
                </td>
            </tr>
        </table>
        @* <fieldset>
        <legend>SocietySubscription</legend>

        @Html.HiddenFor(model => model.SocietySubscriptionID)

        <div class="editor-label">
            @Html.LabelFor(model => model.SubscriptionStart)
        </div>
        <div class="editor-field">
            <label id="SubscriptionStart" >@String.Format("{0:dd-MMM-yyyy}", Model.SubscriptionStart)</label>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubscriptionEnd)
        </div>
        <div class="editor-field">
            <label id="SubscriptionEnd" >@String.Format("{0:dd-MMM-yyyy}", Model.SubscriptionEnd)</label>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PaidTillDate)
        </div>
        <div class="editor-field">
            @String.Format("{0:dd-MMM-yyyy}", Model.PaidTillDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NoOfMembers)
        </div>
        <div class="editor-field">
            @{var totnos = Model.NoOfMembers + Model.NoOfInvoicedMembers;}
            @totnos
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.InvoicedMonths)
        </div>
        <div class="editor-field">
            @{var totmths = Model.InvoicedMonths + Model.PaidMonths;}
            @totmths
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NoOfAdditionalMembers)
        </div>
        <div class="editor-field">
            <input class="text-box single-line" data-val="true" data-val-number="The field NoOfAdditionalMembers must be a number." data-val-required="The NoOfAdditionalMembers field is required." id="NoOfAdditionalMembers" name="NoOfAdditionalMembers" type="text" value="@Model.NoOfAdditionalMembers"  onkeyup ="NoOfAdditionalMembers_onkeyup(this,@Model.NoOfMembers,@Model.NoOfInvoicedMembers,@Model.PaidMonths,@Model.InvoicedMonths)" />
            <span class="field-validation-valid" data-valmsg-for="NoOfAdditionalMembers" data-valmsg-replace="true"></span>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubscribedMonths)
        </div>
        <div class="editor-field">
            <input class="text-box single-line" data-val="true" data-val-number="The field SubscribedMonths must be a number." data-val-required="The SubscribedMonths field is required." id="SubscribedMonths" name="SubscribedMonths" type="text" value="@Model.SubscribedMonths " onkeyup ="SubscribedMonths_onkeyup(this,@Model.NoOfMembers,@Model.NoOfInvoicedMembers,@Model.PaidMonths,@Model.InvoicedMonths)" />
            <span class="field-validation-valid" data-valmsg-for="SubscribedMonths" data-valmsg-replace="true"></span>
        </div> *@
        <br />
        <br />
        <table border="0" cellpadding="2" cellspacing="0" class="table" id="tabSubscriptions">
            @{
                                                                                                                                                                                                                                                                                                                                                                                                                int Count = 0;
                                                                                                                                                                                                                                                                                                                                                                                                                //var subscriptionservices = (IEnumerable<CloudSocietyEntities.SocietySubscriptionService>)ViewBag.SubscriptionServices;
            }
            @foreach (var item in (IEnumerable<CloudSocietyEntities.TariffRateWithActiveStatus>)ViewBag.Services)
            {
                Count++;
                if (Count == 1)
                {
                <tr>
                    <th>
                    </th>
                    <th>
                        Service Type
                    </th>
                    <th>
                        Chargeability
                    </th>
                    <th>
                        Basis
                    </th>
                    <th>
                        Rate
                    </th>
                    <th>
                        Calculation
                    </th>
                    <th>
                        Amount
                    </th>
                </tr>
                }
                <tr @if ((Count % 2) == 0)
                    { <text> class="TableRow" </text> }
                    else
                    { <text> class="altTableRow" </text>}>
                    <td width="20px">
                        <input id="Chk+@Count" name="Chk+@Count" data-val="true" type="checkbox" @if (item.ActiveStatus != null)
                                                                                                 {<text>checked="checked"</text>}  @if (item.ActiveStatus == "A" || item.ActiveStatus == "I")
                                                                                                                       {<text>disabled="disabled"</text>} @if (item.Mandatory == true)
                                                                                                                                                          {<text> style="visibility:hidden;" </text> } onclick="CheckBoxForActivatePendingSubscriptions()" />
                        <input id="ID+@Count" name="ID+@Count" data-val="true" type="hidden" value="@item.ServiceTypeID" />
                    </td>
                    <td width="120px">
                        @item.ServiceType
                    </td>
                    <td width="80px">
                        <label id="lblChargeability+@Count" >@(item.ChargeabilityBasis.ElementAt(0).ToString() == "O" ? "One Time" : (item.ChargeabilityBasis.ElementAt(0).ToString() == "M" ? "Monthly" : "Quarterly"))</label>
                        <label id="lblChargeabilityBasis+@Count" style="visibility:hidden;" >@item.ChargeabilityBasis</label>
                    </td>
                    <td width="80px">
                        <label id="lblBasis+@Count" >@(item.ChargeabilityBasis.ElementAt(1).ToString() == "M" ? "per Member" : "per Society")</label>
                        <label id="lblActiveStatus+@Count" style="visibility:hidden;" >@item.ActiveStatus</label>
                    </td>
                    <td width="45px" align="right">
                        <label id="lblRate+@Count" >@item.Rate</label>
                    </td>
                    <td width="270px" align="right">
                        @{string Calc = "";

                          if (item.ChargeabilityBasis == "OS" && item.ActiveStatus == "P") { Calc = item.Rate.ToString(); }
                          else if (item.ChargeabilityBasis == "OS" && item.ActiveStatus != "P") { Calc = "0"; }
                          else if (item.ChargeabilityBasis == "OM" && item.ActiveStatus == "P") { Calc = "( " + Model.NoOfMembers + " + " + Model.NoOfInvoicedMembers + " + " + Model.NoOfAdditionalMembers + " ) * " + item.Rate; }
                          else if (item.ChargeabilityBasis == "OM" && item.ActiveStatus != "P") { Calc = Model.NoOfAdditionalMembers + " * " + item.Rate; }
                          else if (item.ChargeabilityBasis == "MS" && item.ActiveStatus == "P") { Calc = "( " + Model.PaidMonths + " + " + Model.InvoicedMonths + " + " + Model.SubscribedMonths + " ) * " + item.Rate; }
                          else if (item.ChargeabilityBasis == "MS" && item.ActiveStatus != "P") { Calc = Model.SubscribedMonths + " * " + item.Rate; }
                          else if (item.ChargeabilityBasis == "MM" && item.ActiveStatus == "P") { Calc = "( " + Model.PaidMonths + " + " + Model.InvoicedMonths + " + " + Model.SubscribedMonths + " ) * ( " + Model.NoOfMembers + " + " + Model.NoOfInvoicedMembers + " + " + Model.NoOfAdditionalMembers + " ) * " + item.Rate; }
                          else if (item.ChargeabilityBasis == "MM" && item.ActiveStatus != "P") { Calc = "( ( " + Model.NoOfAdditionalMembers + " * ( " + Model.PaidMonths + " + " + Model.InvoicedMonths + " + " + Model.SubscribedMonths + " ) ) + ( " + Model.SubscribedMonths + " * ( " + Model.NoOfMembers + " + " + Model.NoOfInvoicedMembers + " ) ) ) * " + item.Rate; }
                        }
                        <label id="lblCalc+@Count" >@Calc</label>
                    </td>
                    <td width="70px" align="right">
                        @{decimal Amount = 0;

                          if (item.ChargeabilityBasis == "OS" && item.ActiveStatus == "P") { Amount = item.Rate; }
                          else if (item.ChargeabilityBasis == "OS" && item.ActiveStatus != "P") { Amount = 0; }
                          else if (item.ChargeabilityBasis == "OM" && item.ActiveStatus == "P") { Amount = (Model.NoOfMembers + Model.NoOfInvoicedMembers + Model.NoOfAdditionalMembers) * item.Rate; }
                          else if (item.ChargeabilityBasis == "OM" && item.ActiveStatus != "P") { Amount = Model.NoOfAdditionalMembers * item.Rate; }
                          else if (item.ChargeabilityBasis == "MS" && item.ActiveStatus == "P") { Amount = (Model.PaidMonths + Model.InvoicedMonths + Model.SubscribedMonths) * item.Rate; }
                          else if (item.ChargeabilityBasis == "MS" && item.ActiveStatus != "P") { Amount = Model.SubscribedMonths * item.Rate; }
                          else if (item.ChargeabilityBasis == "MM" && item.ActiveStatus == "P") { Amount = (Model.PaidMonths + Model.InvoicedMonths + Model.SubscribedMonths) * (Model.NoOfMembers + Model.NoOfInvoicedMembers + Model.NoOfAdditionalMembers) * item.Rate; }
                          else if (item.ChargeabilityBasis == "MM" && item.ActiveStatus != "P") { Amount = ((Model.NoOfAdditionalMembers * (Model.PaidMonths + Model.InvoicedMonths + Model.SubscribedMonths)) + (Model.SubscribedMonths * (Model.NoOfMembers + Model.NoOfInvoicedMembers))) * item.Rate; }

             
              
                        }
                        <label id="lblAmount+@Count" >@Amount</label>
                    </td>
                </tr>
            }
            <tr class="altTableRow">
                <td colspan="5">
                    <b>Net Amount</b>
                </td>
                <td colspan="2" align="right">
                    <b>
                        <label id="lblNetAmt" />
                    </b>
                </td>
            </tr>
            <tr class="altTableRow">
                <td colspan="5">
                    <b>@ViewBag.TaxPrompt</b><input id="TaxRate" type="hidden" value="@ViewBag.TaxPerc" />
                </td>
                <td colspan="2" align="right">
                    <b>
                        <label id="lblTaxAmt" />
                    </b>
                </td>
            </tr>
            <tr class="altTableRow">
                <td colspan="5">
                    <b>Grand Total</b>
                </td>
                <td colspan="2" align="right">
                    <b>
                        <label id="lblTotAmt" />
                    </b>
                </td>
                @Html.Hidden("NoOfSubscriptions", Count)
            </tr>
        </table>
        <p>
            <input type="submit" value="Save" class="buttton" style="width: 45px; height: 23px;
                vertical-align: middle;" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.SocietyID }, new { @class = "EditDelete" })
</div>
<img src="../../Content/Images/bg-title.jpg" height="0px" width="0px" onload="CheckBoxForActivatePendingSubscriptions()" />