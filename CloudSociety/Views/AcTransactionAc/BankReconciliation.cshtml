@model IEnumerable<CloudSocietyEntities.AcTransactionAc>
@{
    ViewBag.Title = "Bank Reconciliation";
    ViewBag.Header = "Bank Reconciliation";
    ViewBag.SocietyNameHeader = ViewBag.SocietyHead;
    Layout = "~/Views/Shared/SocietyLayout.cshtml";
    var AcHead = (CloudSocietyEntities.AcHead)ViewBag.AcHead;
    var OpBalAsPerBooks = (decimal?)ViewBag.OpBalAsPerBooks ?? 0;
    var OpBalAsPerBank = (decimal?)ViewBag.OpBalAsPerBank ?? 0;
    var ClBalAsPerBooks = (decimal?)ViewBag.ClBalAsPerBooks ?? 0;
    var ClBalAsPerBank = (decimal?)ViewBag.ClBalAsPerBank ?? 0;
    bool IsFullAccess = new CloudSociety.Controllers.AppInfoController().IsFullAccess();
    bool YearClosed = (bool)ViewBag.YearClosed;
    IsFullAccess &= !YearClosed;
}
<link rel="stylesheet" type="text/css" href="http://cdn.webrupee.com/font" />
@*==== Scripts to be added for AJAX calendar START ====*@
<script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/MicrosoftAjax.debug.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.ExtenderBase.BaseScripts.js")"
        type="text/javascript"></script>
<script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Common.Common.js")"
        type="text/javascript"></script>
<script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Common.DateTime.js")"
        type="text/javascript"></script>
<script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Animation.Animations.js")"
        type="text/javascript"></script>
<script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.PopupExtender.PopupBehavior.js")"
        type="text/javascript"></script>
<script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Animation.AnimationBehavior.js")"
        type="text/javascript"></script>
<script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Common.Threading.js")"
        type="text/javascript"></script>
<script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Compat.Timer.Timer.js")"
        type="text/javascript"></script>
<script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Calendar.CalendarBehavior.js")"
        type="text/javascript"></script>
@*==== END ====*@
<table border="0" cellpadding="2" cellspacing="0" class="table">
    <tr class="TableRow">
        <td colspan="4">
            From Date :
            @String.Format("{0:dd-MMM-yyyy}", (DateTime)ViewBag.FromDate)
        </td>
        <td align="right" colspan="5">
            To Date :
            @String.Format("{0:dd-MMM-yyyy}", (DateTime)ViewBag.ToDate)
        </td>
    </tr>
    <tr class="alttableRow">
        <td colspan="4">
            Bank A/C :
        </td>
        <td colspan="5">
            @AcHead.Name
        </td>
    </tr>
    <tr class="TableRow">
        <td colspan="4">
            Opening Balance As Per Books :
        </td>
        <td align="right">
            <span class="WebRupee">Rs </span>
            @Math.Abs(OpBalAsPerBooks)
            @if (OpBalAsPerBooks < 0)
            {
                <text> Cr</text>
            }
            else
            {
                <text> Dr</text>
            }
        </td>
        <td colspan="4">
        </td>
    </tr>
    <tr class="alttableRow">
        <td colspan="4">
            Opening Balance As Per Bank :
        </td>
        <td align="right">
            <span class="WebRupee">Rs </span>
            @Math.Abs(OpBalAsPerBank)
            @if (OpBalAsPerBank < 0)
            {
                <text> Cr</text>
            }
            else
            {
                <text> Dr</text>
            }
        </td>
        <td colspan="4">
        </td>
    </tr>
    @{
        int Count = 1;      
    }
    @foreach (var item in Model)
    {
        if (Count == 1)
        {
        <tr>
            <th>
                Doc. No.
            </th>
            <th>
                Doc. Date
            </th>
            <th>
                Account Head
            </th>
            <th>
                Particular
            </th>
            <th align="right" width="80px">
                Amount
            </th>
            <th>
                Cheque No.
            </th>
            <th>
                Bank
            </th>
            <th>
                Branch
            </th>
            <th>
                Reconciled On
            </th>
        </tr>
        }  
        <tr @if ((Count % 2) == 0)
            { <text> class="TableRow" </text> }
            else
            { <text> class="alttableRow" </text>} >
            <td>@item.AcTransaction.DocNo
            </td>
            <td>
                @String.Format("{0:dd-MMM-yyyy}", item.AcTransaction.DocDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AcHead.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Particulars)
            </td>
            <td align="right">
                @(item.Amount == null ? "--" : item.Amount + (item.DrCr == "C" ? " Cr" : " Dr"))
            </td>
            <td>
                @item.AcTransaction.PayRefNo
            </td>
            <td>
                @(item.AcTransaction.BankID != null ? item.AcTransaction.Bank.Name : "")
            </td>
            <td>
                @item.AcTransaction.Branch
            </td>
            <td>
                @if (IsFullAccess)
                {
                    string date = item.Reconciled == null ? "Set Date" : String.Format("{0:dd-MMM-yyyy}", item.Reconciled);   
                    @Html.ActionLink(item.Reconciled == null ? "Set Date" : String.Format("{0:dd-MMM-yyyy}", item.Reconciled), "SetReconciledDate", new { id = item.AcTransactionAcID, SocietySubscriptionID = ViewBag.SocietySubscriptionID, AcHeadID = AcHead.AcHeadID, FromDate = String.Format("{0:dd-MMM-yyyy}", (DateTime)ViewBag.FromDate), ToDate = String.Format("{0:dd-MMM-yyyy}", (DateTime)ViewBag.ToDate), DCB = (String)ViewBag.DCB }, new { @class = "EditDelete" })
                }
                else
                {
                    if (item.Reconciled != null)
                    { 
                        @String.Format("{0:dd-MMM-yyyy}", item.Reconciled)
                    } 
                }
            </td>
        </tr>
                Count = Count + 1;
    }
    @if (Count == 1)
    {
      
        <span class="SocName"><b>Currently there are no Records</b> </span>
        <br />
        <br /> <br />
    }
    <tr class="alttableRow">
        <td colspan="4">
            Closing Balance As Per Books :
        </td>
        <td align="right">
            <span class="WebRupee">Rs </span>
            @Math.Abs(ClBalAsPerBooks)
            @if (ClBalAsPerBooks < 0)
            {
                <text> Cr</text>
            }
            else
            {
                <text> Dr</text>
            }
        </td>
        <td colspan="4">
        </td>
    </tr>
    <tr class="TableRow">
        <td colspan="4">
            Closing Balance As Per Bank :
        </td>
        <td align="right">
            <span class="WebRupee">Rs </span>
            @Math.Abs(ClBalAsPerBank)
            @if (ClBalAsPerBank < 0)
            {
                <text> Cr</text>
            }
            else
            {
                <text> Dr</text>
            }
        </td>
        <td colspan="4">
        </td>
    </tr>
</table>
<br />
<table>
    <tr>
        <td>
            @using (Html.BeginForm("BankReconciliationReport", "AccountingReport"))
            {   
                @Html.Hidden("id", (Guid)ViewBag.SocietySubscriptionID) 
                @Html.Hidden("AcHeadID", AcHead.AcHeadID) 
                @Html.Hidden("AsOnDate", String.Format("{0:dd-MMM-yyyy}", (DateTime)ViewBag.ToDate)) 
                <input type="submit" value="Report" class="buttton" style="width: 50px; height: 23px;" />  
            }
        </td>
    </tr>
    <tr>
        <td>
            @Html.ActionLink("Back", "AskPeriodAcHead", new { id = (Guid)ViewBag.SocietySubscriptionID, AcHeadID = AcHead.AcHeadID, FromDate = String.Format("{0:dd-MMM-yyyy}", (DateTime)ViewBag.FromDate), ToDate = String.Format("{0:dd-MMM-yyyy}", (DateTime)ViewBag.ToDate), DCB = (String)ViewBag.DCB}, new { @class = "EditDelete" })
        </td>
    </tr>
</table>
@*<div>
    @Html.ActionLink("Back", "AskPeriodAcHead", new { id = (Guid)ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
    |
    @using (Html.BeginForm())
    {
@Html.ValidationSummary(false, "Following errors occurred while processing your request")
        @Html.Hidden("id", (Guid)ViewBag.SocietySubscriptionID) 
        @Html.Hidden("AcHeadID", AcHead.AcHeadID) 
        @Html.Hidden("AsOnDate", String.Format("{0:dd-MMM-yyyy}", (DateTime)ViewBag.FromDate)) 
        <input type="submit" value="Report" class="buttton" style="width: 50px; height: 23px;" />
 @Html.ActionLink("Bank Reconciliation Report", "BankReconciliationReport", "BankReconciliationReport", new { id = (Guid)ViewBag.SocietySubscriptionID, AcHeadID = AcHead.AcHeadID, AsOnDate = String.Format("{0:dd-MMM-yyyy}", (DateTime)ViewBag.FromDate) }, new { @class = "EditDelete" })
    }
    <a href="@Url.Content("~/AcTransactionAc/AskPeriodAcHead/" + ViewBag.SocietySubscriptionID)" class = "EditDelete">Bank Reconciliation</a>
</div>*@