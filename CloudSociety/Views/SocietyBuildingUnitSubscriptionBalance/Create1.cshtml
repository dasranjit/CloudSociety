@model CloudSocietyEntities.SocietyBuildingUnitSubscriptionBalance
@{
    ViewBag.Title = "Create Society Building Unit Subscription Balance";
    ViewBag.Header = " Society Building Unit Subscription Balance";
    ViewBag.SocietyNameHeader = ViewBag.SocietyHead;
    Layout = "~/Views/Shared/SocietyLayout.cshtml";
    var societyBuildingUnit = (CloudSocietyEntities.SocietyBuildingUnit)ViewBag.SocietyBuildingUnit;
    bool IsFullAccess = new CloudSociety.Controllers.AppInfoController().IsFullAccess();
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<span class="SocName">Building Unit: @societyBuildingUnit.SocietyBuilding.Building -
    @societyBuildingUnit.Unit</span>
<br />
<br />
@using (Html.BeginForm())
{
    @Html.ValidationSummary(false, "Following errors occurred while processing your request") 
    @Html.Hidden("SocietySubscriptionID", (Guid)ViewBag.SocietySubscriptionID) 
    @Html.Hidden("SocietyBuildingUnitID", societyBuildingUnit.SocietyBuildingUnitID)    
    <fieldset style="width: 450px">
        <legend>Create Society Building Unit Subscription Balance</legend>
        <br />
        <table border="0" cellpadding="0" cellspacing="0">
            <tr>
                <td>
                    Society Member :
                </td>
                <td>
                    @Html.DropDownList("SocietyMemberID", new SelectList(ViewBag.SocietyMembersList as System.Collections.IEnumerable, "SocietyMemberID", "Member"))
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.SocietyMemberID)</span>
                </td>
            </tr>
            <tr>
                <td>
                    Bill Abbreviation :
                </td>
                <td>
                    @Html.DropDownList("BillAbbreviation", new SelectList(ViewBag.BillAbbreviationList as System.Collections.IEnumerable, "BillAbbreviation", "BillAbbreviation"))
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.BillAbbreviation)</span>
                </td>
            </tr>
            <tr>
                <td>
                    Principal Amount :
                </td>
                <td>
                    @Html.TextBox("PrincipalAmount", null, new { @class = "shortWidth" })
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.PrincipalAmount)</span>
                </td>
            </tr>
            <tr>
                <td>
                    Principal Receipt :
                </td>
                <td>
                    @Html.TextBox("PrincipalReceipt", null, new { @class = "shortWidth" })
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.PrincipalReceipt)</span>
                </td>
            </tr>
            <tr>
                <td>
                    Interest Amount :
                </td>
                <td>
                    @Html.TextBox("InterestAmount", null, new { @class = "shortWidth" })
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.InterestAmount)</span>
                </td>
            </tr>
            <tr>
                <td>
                    Interest Receipt :
                </td>
                <td>
                    @Html.TextBox("InterestReceipt", null, new { @class = "shortWidth" })
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.InterestReceipt)</span>
                </td>
            </tr>
            <tr>
                <td>
                    Special Bill Amount :
                </td>
                <td>
                    @Html.TextBox("SpecialBillAmount", null, new { @class = "shortWidth" })
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.SpecialBillAmount)</span>
                </td>
            </tr>
            <tr>
                <td>
                    Special Bill Receipt :
                </td>
                <td>
                    @Html.TextBox("SpecialBillReceipt", null, new { @class = "shortWidth" })
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.SpecialBillReceipt)</span>
                </td>
            </tr>
            <tr>
                <td>
                    Tax Amount :
                </td>
                <td>
                    @Html.TextBox("TaxAmount", null, new { @class = "shortWidth" })
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.TaxAmount)</span>
                </td>
            </tr>
            <tr>
                <td>
                    Tax Receipt :
                </td>
                <td>
                    @Html.TextBox("TaxReceipt", null, new { @class = "shortWidth" })
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.TaxReceipt)</span>
                </td>
            </tr>
            <tr>
                <td>
                    Advance :
                </td>
                <td>
                    @Html.TextBox("Advance", null, new { @class = "shortWidth" })
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.Advance)</span>
                </td>
            </tr>
            <tr>
                <td>
                    Advance Adjusted :
                </td>
                <td>
                    @Html.TextBox("AdvanceAdjusted", null, new { @class = "shortWidth" })
                    <span class="editor-field">@Html.ValidationMessageFor(model => model.AdvanceAdjusted)</span>
                </td>
            </tr>
            @if (IsFullAccess)
            {
            <tr>
                <td colspan="2" align="center">
                    <input type="submit" value="Create" class="buttton" style="width: 45px; height: 23px;" />
                </td>
            </tr>
            }
        </table>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to BuildingUnit", "AskBuildingUnit", new { id = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
</div>
