@model IEnumerable<CloudSocietyEntities.SocietyBuildingUnit>
@{
    ViewBag.Title = "Society Building Unit";
    ViewBag.Header = "Society Building Unit";
    var societyBuilding = (CloudSocietyEntities.SocietyBuilding)ViewBag.SocietyBuilding;
    ViewBag.SocietyNameHeader = ViewBag.SocietyHead;
    Layout = "~/Views/Shared/SocietyLayout.cshtml";       
}
<span class="SocName">Building : @societyBuilding.Building</span>
<br />
@*<br />*@
@if ((bool)ViewBag.ShowCreate)
{
    <div class="buttton" style="width: 65px;">
        @Html.ActionLink("Create New", "Create", new { societyBuildingID = societyBuilding.SocietyBuildingID, societySubscriptionID = ViewBag.SocietySubscriptionID })</div>
    <br />
}
@using (Html.BeginForm("IndexWithSearch", "SocietyBuildingUnit", FormMethod.Get))
{
    @Html.ValidationSummary(false, "Following errors occurred while processing your request")
    <fieldset style="width: 750px">
        <legend>Search</legend>
        <table>
            <tr>
                <td>
                    By Unit :
                </td>
                <td>
                    @Html.TextBox("Unit", null, new { @class = "mediumWidth" })
                </td>
                <td align="center">
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    <input type="submit" value="Search" class="buttton" style="width: 45px; height: 23px;
                        vertical-align: middle;" />
                </td>
            </tr>
        </table>
    </fieldset>
    @Html.Hidden("societySubscriptionID", (Guid)ViewBag.societySubscriptionID)
    @Html.Hidden("societyBuildingID", societyBuilding.SocietyBuildingID)
}
<br />

@if (Model.Count() > 0)
{
    var grid = new WebGrid(Model, canPage: true, defaultSort: "Unit", canSort: true, rowsPerPage: 50);
    grid.Pager(WebGridPagerModes.NextPrevious);
    WebGridColumn[] columnSet = new WebGridColumn[11];
    columnSet[0] = grid.Column("", "", @<text><div style='width: 240px'>
                                                  @Html.ActionLink("Edit", "Edit", new { id = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
                                                  |
                                                  @Html.ActionLink("Delete", "Delete", new { id = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
                                                  |
                                                  @Html.ActionLink("Details", "Details", new { id = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
                                                  |
                                                  @if ((bool)ViewBag.YearOpen)
                                                  {
                                                      @Html.ActionLink("Opening Balance", "Index2", "SocietyBuildingUnitSubscriptionBalance", new { societyBuildingUnitID = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
                                                      <text>|</text>
                                                  }
                                                  @Html.ActionLink("Charge Head", "Index", "SocietyBuildingUnitChargeHead", new { societyBuildingUnitID = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
                                                  |
                                                  @Html.ActionLink("Member", "Index", "SocietyBuildingUnitTransfer", new { societyBuildingUnitID = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
</div></text>);
    columnSet[1] = grid.Column("Unit", "Unit", @<text><div style='width: 120px'>@item.Unit</div></text>, canSort: true);
    columnSet[2] = grid.Column("UnitType.Type", "Type", @<text><div style='width: 260px'>@item.UnitType.Type</div></text>, canSort: false);
    columnSet[3] = grid.Column("FloorNo", "FloorNo", @<text><div style='width: 80px'>@item.FloorNo</div></text>, canSort: true);
    columnSet[4] = grid.Column("Wing", "Wing", @<text> <div style='width: 80px'>@item.Wing</div></text>, canSort: true);
    columnSet[5] = grid.Column("CarpetArea", "CarpetArea", @<text><div style='width: 80px'>@item.CarpetArea</div></text>, canSort: false);
    columnSet[6] = grid.Column("ChargeableArea", "ChargeableArea", @<text><div style='width: 80px'>@item.ChargeableArea</div></text>, canSort: false);
    columnSet[7] = grid.Column("TerraceArea", "TerraceArea", @<text> <div style='width: 80px'>@item.TerraceArea</div></text>, canSort: false);
    columnSet[8] = grid.Column("StartDate", "StartDate", @<text><div style='width: 80px'>@(item.StartDate==null ? "" : String.Format("{0:dd-MMM-yyyy}", item.StartDate))</div></text>, canSort: false);
    columnSet[9] = grid.Column("EndDate", "EndDate", @<text><div style='width: 80px'>@(item.EndDate==null ? "" : String.Format("{0:dd-MMM-yyyy}", item.EndDate))</div></text>, canSort: false);
    columnSet[10] = grid.Column("CertificateNo", "CertificateNo", @<text> <div style='width: 80px'>@item.CertificateNo</div></text>, canSort: true);
    @grid.GetHtml(tableStyle: "table", footerStyle: "webgrid-footer", rowStyle: "TableRow", alternatingRowStyle: "altTableRow", columns: grid.Columns(columnSet))
}
else
{
    <table>
        <tr class="TableRow">
            <td>
                No Record Found.
            </td>
        </tr>
    </table>
}

@*<table border="0" cellpadding="2" cellspacing="0" class="table">
    @{
        int Count = 1;
    }
    @foreach (var item in Model)
    {
        if (Count == 1)
        {
        <tr>
            <th>
            </th>
            <th>
                Unit
            </th>
            <th>
                Unit Type
            </th>
            <th>
                Floor No
            </th>
            <th>
                Wing
            </th>
            <th>
                Carpet Area
            </th>
            <th>
                Chargeable Area
            </th>
            <th>
                Terrace Area
            </th>
            <th>
                Start Date
            </th>
            <th>
                End Date
            </th>
            <th>
                Certificate No
            </th>
        </tr>
        }  
        <tr @if ((Count % 2) == 0)
            { <text> class="TableRow" </text> }
            else
            { <text> class="altTableRow" </text>} >
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
                |
                @Html.ActionLink("Delete", "Delete", new { id = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
                |
                @Html.ActionLink("Details", "Details", new { id = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
                |
                @if((bool)ViewBag.YearOpen)
                {
                @Html.ActionLink("Opening Balance", "Index2", "SocietyBuildingUnitSubscriptionBalance", new { societyBuildingUnitID = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
                <text>|</text>
                }
                @Html.ActionLink("Charge Head", "Index", "SocietyBuildingUnitChargeHead", new { societyBuildingUnitID = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
                |
                @Html.ActionLink("Member", "Index", "SocietyBuildingUnitTransfer", new { societyBuildingUnitID = item.SocietyBuildingUnitID, societySubscriptionID = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Unit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitType.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FloorNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Wing)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CarpetArea)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ChargeableArea)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TerraceArea)
            </td>
            <td>
                @String.Format("{0:dd-MMM-yyyy}", item.StartDate)
            </td>
            <td>
                @String.Format("{0:dd-MMM-yyyy}", item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CertificateNo)
            </td>
        </tr>
           Count = Count + 1;
    }
    @if (Count == 1)
    {<tr class="TableRow">
        <td>
            Currently there are no Records
        </td>
    </tr> }
</table>*@

<br />
<div>
    @Html.ActionLink("Back to Building List", "Index", "SocietyBuilding", new { id = ViewBag.SocietySubscriptionID }, new { @class = "EditDelete" })
</div>
