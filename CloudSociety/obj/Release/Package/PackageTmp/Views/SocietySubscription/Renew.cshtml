@model CloudSocietyEntities.SocietySubscription

@{
    ViewBag.Title = "Renew Society Subscription";
    ViewBag.Header = "Renew Society Subscription";
    Layout = "~/Views/Shared/SubscriberLayout.cshtml";
}

<script type="text/javascript" >

    function stopThis(OldNoOfAdditionalMembers) 
    {
        var NewNoOfAdditionalMembers = document.getElementById("NoOfAdditionalMembers").value;
        if (parseFloat(OldNoOfAdditionalMembers) > parseFloat(NewNoOfAdditionalMembers)) { alert("No. Of Additional Members should be greater than or equal to " + OldNoOfAdditionalMembers); return true; }
        else { return false; }

    }  
</script>



<span class="SocName">@ViewBag.SocietyName</span><br/><br/>

<script src="@Url.Content("~/Scripts/SocietySubscriptionCreate.js")" type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@*==== Scripts to be added for AJAX calendar START ====*@
    <script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/MicrosoftAjax.debug.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.ExtenderBase.BaseScripts.js")"
        type="text/javascript"></script>
    <script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Common.Common.js")"
        type="text/javascript"></script>
    <script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Common.DateTime.js")"
        type="text/javascript"></script>
    <script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Animation.Animations.js")"
        type="text/javascript"></script>
    <script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.PopupExtender.PopupBehavior.js")"
        type="text/javascript"></script>
    <script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Animation.AnimationBehavior.js")"
        type="text/javascript"></script>
    <script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Common.Threading.js")"
        type="text/javascript"></script>
    <script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Compat.Timer.Timer.js")"
        type="text/javascript"></script>
    <script src="@Url.Content("~/Content/AjaxControlToolkit/3.0.20820.16598/3.0.20820.0/AjaxControlToolkit.Calendar.CalendarBehavior.js")"
        type="text/javascript"></script>
    <script type="text/javascript">

        Sys.Application.add_init(appInit);

        function appInit() {
            $create(AjaxControlToolkit.CalendarBehavior, { format: "dd-MMM-yyyy" }, null, null, $get('SubscriptionEnd'));
        }   
    </script>
    @*==== END ====*@


    <script type="text/javascript">
        $(document).ready(function () { $("input.autocompleteOff").attr("autocomplete", "off"); });
    </script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(false, "Following errors occurred while processing your request")
    <fieldset style="width: 550px">
        <legend>Renew Society Subscription</legend>

        @Html.HiddenFor(model => model.SocietyID)
        @Html.HiddenFor(model => model.NoOfMembers)
        <input data-val="true" data-val-required="The SubscriptionStart field is required." id="SubscriptionStart" name="SubscriptionStart" type="hidden" value="@String.Format("{0:dd-MMM-yyyy}", Model.SubscriptionStart)" />
        <br />
        <table border="0" cellpadding="0" cellspacing="0">
            <tr>
                <td class="editor-label"  >
                   @Html.LabelFor(model => model.SubscriptionStart)
                </td>
                <td>
                    @String.Format("{0:dd-MMM-yyyy}", Model.SubscriptionStart)
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.SubscriptionEnd)
                </td>
                <td>
                    @{
                        string SubscriptionEndDate;
                        SubscriptionEndDate = String.Format("{0:dd-MMM-yyyy}", Model.SubscriptionEnd);
                    }
                    <input class="text-box single-line" data-val="true" data-val-required="The SubscriptionEnd field is required." id="SubscriptionEnd" name="SubscriptionEnd" type="text" value="@SubscriptionEndDate" onchange="MonthendCheckforRenew(this)" />
                    <span class="field-validation-valid" data-valmsg-for="SubscriptionEnd" data-valmsg-replace="true"></span>
@*            <input class="text-box single-line" data-val="true" data-val-required="The SubscriptionEnd field is required." id="SubscriptionEnd" name="SubscriptionEnd" type="text" onchange="MonthendCheck(this)" /><span class="editor-field"> &nbsp;&nbsp;&nbsp;&nbsp;<span class="field-validation-valid" data-valmsg-for="SubscriptionEnd" data-valmsg-replace="true"></span></span>
*@
                </td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(model => model.NoOfMembers)
                </td>
                <td>
                    @Model.NoOfMembers
                </td>
            </tr>
            <tr>
                <td class="editor-label"  >
                   @Html.LabelFor(model => model.NoOfAdditionalMembers)
                </td>
                <td>
                   <input class="text-box single-line autocompleteOff" data-val="true" data-val-number="The field NoOfAdditionalMembers must be a number." data-val-required="The NoOfAdditionalMembers field is required." id="NoOfAdditionalMembers" name="NoOfAdditionalMembers" type="text" value="@Model.NoOfAdditionalMembers" onkeyup  ="NoOfMembersforRenew(this)" />
            <span class="field-validation-valid" data-valmsg-for="NoOfAdditionalMembers" data-valmsg-replace="true"></span>
                </td>
            </tr>
            <tr>
                <td class="editor-label"  >
                    @Html.LabelFor(model => model.SubscribedMonths)
                </td>
                <td>
                    <input class="text-box single-line autocompleteOff" data-val="true" data-val-number="The field SubscribedMonths must be a number." data-val-required="The SubscribedMonths field is required." id="SubscribedMonths" name="SubscribedMonths" type="text" onkeyup="MonthsforRenew(this)" />
                    <span class="field-validation-valid" data-valmsg-for="SubscribedMonths" data-valmsg-replace="true"></span>
                </td>
            </tr>
                        
        </table>
        
        @*<div class="editor-label">
            @Html.LabelFor(model => model.SubscriptionStart)
        </div>
        <div class="editor-field">
            @String.Format("{0:dd-MMM-yyyy}", Model.SubscriptionStart)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubscriptionEnd)
        </div>
        <div class="editor-field">
        @{
       string SubscriptionEndDate;
       SubscriptionEndDate = String.Format("{0:dd-MMM-yyyy}", Model.SubscriptionEnd);
        }
            <input class="text-box single-line" data-val="true" data-val-required="The SubscriptionEnd field is required." id="SubscriptionEnd" name="SubscriptionEnd" type="text" value="@SubscriptionEndDate" onchange="MonthendCheckforRenew(this)" />
            <span class="field-validation-valid" data-valmsg-for="SubscriptionEnd" data-valmsg-replace="true"></span>
       </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NoOfMembers)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NoOfMembers)
            @Html.ValidationMessageFor(model => model.NoOfMembers)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NoOfAdditionalMembers)
        </div>
        <div class="editor-field">
            <input class="text-box single-line" data-val="true" data-val-number="The field NoOfAdditionalMembers must be a number." data-val-required="The NoOfAdditionalMembers field is required." id="NoOfAdditionalMembers" name="NoOfAdditionalMembers" type="text" value="@Model.NoOfAdditionalMembers" onkeyup  ="NoOfMembersforRenew(this)" />
            <span class="field-validation-valid" data-valmsg-for="NoOfAdditionalMembers" data-valmsg-replace="true"></span>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubscribedMonths)
        </div>
        <div class="editor-field">
            <input class="text-box single-line" data-val="true" data-val-number="The field SubscribedMonths must be a number." data-val-required="The SubscribedMonths field is required." id="SubscribedMonths" name="SubscribedMonths" type="text" onkeyup="MonthsforRenew(this)" />
            <span class="field-validation-valid" data-valmsg-for="SubscribedMonths" data-valmsg-replace="true"></span>
        </div>*@
<br/><br/>
<table border="0" cellpadding="2" cellspacing="0" class="table" id="tabSubscriptions">
@{
       int Count = 0;
}
    
@foreach (var item in (IEnumerable<CloudSocietyEntities.TariffRateWithActiveStatus>)ViewBag.Services)
{
    Count++;
    if (Count == 1)
    {
        <tr>
        <th></th>
        <th>
            Service Type
        </th>
        <th>
            Chargeability
        </th>
        <th>
            Quantity
        </th>
        <th>
            Rate
        </th>
        <th>
            Period
        </th>
        <th>
            Amount
        </th>
    </tr>
    }
    <tr @if ((Count % 2) == 0)
        { <text> class="TableRow" </text> }
        else
        { <text> class="altTableRow" </text>}>
        <td width="20px" >
            <input id="Chk+@Count" name="Chk+@Count" data-val="true" type="checkbox" onclick="CheckBoxForActivatePendingSubscriptions()" @if (item.ActiveStatus != null)
                                                                                                                                         {<text>checked="checked"</text>} @if (item.Mandatory ?? false)
                                                                                                                                                                          {<text> style="visibility:hidden;" </text> } />
            <input id="ID+@Count" name="ID+@Count" data-val="true" type="hidden" value="@item.ServiceTypeID" />
@*            <input id="@cnt" name="@cnt" data-val="true" type="checkbox" checked="checked" />
@{
       cnt++;
}
*@        </td>
        <td width="120px">
            @item.ServiceType
        </td>
        <td width="80px">
            <label id="lblChargeability+@Count" >@(item.ChargeabilityBasis.ElementAt(0).ToString() == "O" ? "One Time" : (item.ChargeabilityBasis.ElementAt(0).ToString() == "M" ? "Monthly" : "Quarterly"))</label>
        </td>
        <td width="100px" align="center" >
            <label id="lblBasis+@Count" style="visibility:hidden;" >@item.ChargeabilityBasis.ElementAt(1).ToString()</label> 
@*            <label id="lblQuantity+@Count" >@(item.ChargeabilityBasis.ElementAt(1).ToString() == "M" ? Model.NoOfAdditionalMembers.ToString() : "1")</label> &nbsp;*@
            <label id="lblQuantity+@Count" >@(item.ChargeabilityBasis.ElementAt(1).ToString() == "M" ? Model.NoOfMembers.ToString() : "1")</label> &nbsp;
            @(item.ChargeabilityBasis.ElementAt(1).ToString() == "M" ? " Members" : " Society")
        </td>
        <td  width="45px" align="right" >
            <label id="lblRate+@Count" >@item.Rate</label>
        </td>
        <td width="20px" align="right">
            <label id="lblPeriod+@Count" ></label>
        </td>
        <td width="70px" align="right" >
            <label id="lblAmount+@Count" ></label>
        </td>
    </tr>
}


<tr class="altTableRow">
      
        
        <td colspan="5"><b>Net Amount</b></td>
        
        
        @{decimal TotalAmount = 0;}
        <td colspan="2"  align="Right"><b><label id="lblNetAmt" />@String.Format("{0:0.00}", TotalAmount)</b></td>
</tr>
<tr class="altTableRow">
       
        <td colspan="5"><b>@ViewBag.TaxPrompt</b><input id="TaxRate" type="hidden" value="@ViewBag.TaxPerc" /></td>
               
        @{
                                                                                     decimal TaxAmount = 0;
                                                                                     TaxAmount = (TotalAmount / 100) * ViewBag.TaxPerc;
         }
        <td colspan="2" align="Right"><b><label id="lblTaxAmt" />@String.Format("{0:0.00}", TaxAmount)</b></td>
</tr>
<tr class="altTableRow">
        
        <td colspan="5"><b>Grand Total</b></td>
        
        @{
                                                            decimal GrandTotal = 0;
                                                            GrandTotal = TotalAmount + TaxAmount;
         }
        <td colspan="2"  align="Right"><b><label id="lblTotAmt" />@String.Format("{0:0.00}", GrandTotal)</b></td>

       @Html.Hidden("NoOfSubscriptions", Count)
</tr>
</table>
   
        <p>
            <input type="submit" value="Create" onclick="return !stopThis(@Model.NoOfAdditionalMembers );" class="buttton" style="width: 45px; height: 23px;
                        vertical-align: middle;"/>
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.SocietyID }, new { @class = "EditDelete" })
</div>

<img src="../../Content/Images/bg-title.jpg" height="0px" width="0px" onload="CheckBoxForActivatePendingSubscriptions()" />